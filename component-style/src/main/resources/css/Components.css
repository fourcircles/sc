@def calendarDays #9b9b9b;
@def calendarOver #e5e5e5;
@def black #000000;

@eval whiteBG kz.arta.synergy.components.style.client.Colors.whiteBG().hex();
@eval whiteBG_0 kz.arta.synergy.components.style.client.Colors.whiteBG().alpha0();
@eval whiteBG_0_ie kz.arta.synergy.components.style.client.Colors.whiteBG().alpha0IE();

@def buttonBorder #e2e2e2;

@eval buttonBG kz.arta.synergy.components.style.client.Colors.buttonBG().hex();
@eval buttonBG_0 kz.arta.synergy.components.style.client.Colors.buttonBG().alpha0();
@eval buttonBG_0_ie kz.arta.synergy.components.style.client.Colors.buttonBG().alpha0IE();

@def textColor1 #757575;
@eval textColor2 kz.arta.synergy.components.style.client.Colors.textColor2().hex();
@def textColor3 #404040;

@eval border1 kz.arta.synergy.components.style.client.Colors.border1().hex();

@eval mainBG kz.arta.synergy.components.style.client.Colors.mainBG().hex();
@eval mainBG_0 kz.arta.synergy.components.style.client.Colors.mainBG().alpha0();
@eval mainBG_0_ie kz.arta.synergy.components.style.client.Colors.mainBG().alpha0IE();

@eval buttonPressed kz.arta.synergy.components.style.client.Colors.buttonPressed().hex();

@def approveButtonBG1 #93c5ae;

@eval approveButtonBG2 kz.arta.synergy.components.style.client.Colors.approveButtonBG2().hex();
@eval approveButtonBG2_0 kz.arta.synergy.components.style.client.Colors.approveButtonBG2().alpha0();
@eval approveButtonBG2_0_ie kz.arta.synergy.components.style.client.Colors.approveButtonBG2().alpha0IE();

@eval approveButtonBG3 kz.arta.synergy.components.style.client.Colors.approveButtonBG3().hex();
@eval approveButtonBG3_0 kz.arta.synergy.components.style.client.Colors.approveButtonBG3().alpha0();
@eval approveButtonBG3_0_ie kz.arta.synergy.components.style.client.Colors.approveButtonBG3().alpha0IE();

@eval approveButtonBG4 kz.arta.synergy.components.style.client.Colors.approveButtonBG4().hex();
@eval approveButtonBG4_0 kz.arta.synergy.components.style.client.Colors.approveButtonBG4().alpha0();
@eval approveButtonBG4_0_ie kz.arta.synergy.components.style.client.Colors.approveButtonBG4().alpha0IE();
@def approveButtonBG5 #239260;

@def declineButtonBG1 #ecacad;

@eval declineButtonBG2 kz.arta.synergy.components.style.client.Colors.declineButtonBG2().hex();
@eval declineButtonBG2_0 kz.arta.synergy.components.style.client.Colors.declineButtonBG2().alpha0();
@eval declineButtonBG2_0_ie kz.arta.synergy.components.style.client.Colors.declineButtonBG2().alpha0IE();

@eval declineButtonBG3 kz.arta.synergy.components.style.client.Colors.declineButtonBG3().hex();
@eval declineButtonBG3_0 kz.arta.synergy.components.style.client.Colors.declineButtonBG3().alpha0();
@eval declineButtonBG3_0_ie kz.arta.synergy.components.style.client.Colors.declineButtonBG3().alpha0IE();

@eval declineButtonBG4 kz.arta.synergy.components.style.client.Colors.declineButtonBG4().hex();
@eval declineButtonBG4_0 kz.arta.synergy.components.style.client.Colors.declineButtonBG4().alpha0();
@eval declineButtonBG4_0_ie kz.arta.synergy.components.style.client.Colors.declineButtonBG4().alpha0IE();

@def stackPanelText2 #808080;
@def selectColor #deefff;

@eval tabBg2 kz.arta.synergy.components.style.client.Colors.tabBG2().hex();
@eval tabBg2_0 kz.arta.synergy.components.style.client.Colors.tabBG2().alpha0();
@eval tabBg2_0_ie kz.arta.synergy.components.style.client.Colors.tabBG2().alpha0IE();

@eval tagBG kz.arta.synergy.components.style.client.Colors.tagBG().hex();
@eval tagBG_0 kz.arta.synergy.components.style.client.Colors.tagBG().alpha0();
@eval tagBG_0_ie kz.arta.synergy.components.style.client.Colors.tagBG().alpha0IE();

/* переписывает direction даже если не подгружается standard_rtl.css */
*[dir="rtl"] {
    direction: rtl;
}

@eval buttonHeight kz.arta.synergy.components.style.client.Constants.buttonHeight();
@eval buttonMinWidth kz.arta.synergy.components.style.client.Constants.buttonMinWidth();
@eval borderWidth kz.arta.synergy.components.style.client.Constants.borderWidth();
@eval borderRadius kz.arta.synergy.components.style.client.Constants.borderRadius();

@def navigatorBG #292f3b;
@def stackPanelBG #f1f1f1;
@def panelBG #f8f8f8;

@def tableString2 #fbfbfb;
/*Цвет фона — #555d6f

Цвет бегунка в состоянии Active – #434958

Цвет бегунка в состоянии Pressed – #2c313a

Цвет стрелок — #2c313a

Цвет кнопок скролл-бара в состоянии Active — #555d6f

Цвет кнопок скролл-бара в состоянии Pressed — #434958

Цвет области состыковки двух скролл-баров (квадрат размеров 17х17px) — #434958*/
@def scrollDark #555d6f;
@def scrollDarkBar #434958;
@def scrollDarkBarPressed #2c313a;

@def searchBG #424b5c;

@def stackPanelMarker1 #c23b3b;
@def progressOptional #ffe465;
@eval progressNormal kz.arta.synergy.components.style.client.Colors.progressNormal().hex();

@def positiveColor #729b28;
@def negativeColor #a33c3c;
@def warningColor #ac9733;


code, pre {
    margin: 0;
    padding: 0;
}

#titlePanel {
    line-height: 54px;
    padding-left: 20px;
    padding-right: 5px;
    border-bottom: 1px solid buttonPressed;
}
#titlePanel > span {
    color: textColor2;
}

#titlePanel > .buttonSimple, #titlePanel > .comboBox {
    margin-top: 11px;
}
#titlePanel > .comboBox {
    margin-right: 20px;
}

/*Это не работает для ie9 - пока там выделяется все*/
.unselectable {
    -moz-user-select: -moz-none;
    -khtml-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.buttonSimple, .approveButton, .declineButton, .dropDownButton {
    height: buttonHeight;
    line-height: buttonHeight;
    min-width: buttonMinWidth;
    border: borderWidth solid;
    border-radius: borderRadius;
    overflow: hidden;
    cursor: default;
    text-align: center;

    white-space: nowrap;
    display: inline-block;
}

.buttonSimple.edge, .approveButton.edge, .declineButton.edge {
    border-radius: 0;
}

.buttonSimple.left, .approveButton.left, .declineButton.left {
    border-radius: borderRadius 0 0 borderRadius;
}


.buttonSimple.right, .approveButton.right, .declineButton.right {
    border-radius: 0 borderRadius borderRadius 0;
}

.buttonSimple {
    background-color: whiteBG;
    border-color: buttonBorder;
    color: textColor2;
}

.buttonText {
    display: inline-block;
    height: 30px;
    vertical-align: top;
    white-space:nowrap;
    text-align: center;
    margin-left: 10px;
    margin-right: 10px;
}

@eval gradientTopMargin kz.arta.synergy.components.style.client.Constants.gradientTopMargin();
.gradient {
    position: absolute;
    width:20%;
    height: 100%;
    top: 0;
    right: 0;
    min-width: 10px;
}

.buttonSimple .gradient,
.taskBar .gradient,
.taskBarIndicator .gradient
{
    background: -moz-linear-gradient(left, whiteBG_0 0%, whiteBG 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,whiteBG_0), color-stop(100%,whiteBG));
    background: -webkit-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: -o-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: -ms-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: linear-gradient(to right, whiteBG_0 0%,whiteBG 100%);

    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")whiteBG_0_ie literal("endColorstr=")whiteBG literal(",GradientType=1 )");
}

*[dir="rtl"] .buttonSimple .gradient,
*[dir="rtl"] .taskBar .gradient
*[dir="rtl"] .taskBarIndicator .gradient
{
    background: -moz-linear-gradient(left, whiteBG 0%, whiteBG_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,whiteBG), color-stop(100%,whiteBG_0));
    background: -webkit-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: -o-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: -ms-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: linear-gradient(to right, whiteBG 0%,whiteBG_0 100%);
}

.pressed.buttonSimple .gradient{
    background: -moz-linear-gradient(left, buttonBG_0 0%, buttonBG 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,buttonBG_0), color-stop(100%,buttonBG));
    background: -webkit-linear-gradient(left, buttonBG_0 0%,buttonBG 100%);
    background: -o-linear-gradient(left, buttonBG_0 0%,buttonBG 100%);
    background: -ms-linear-gradient(left, buttonBG_0 0%,buttonBG 100%);
    background: linear-gradient(to right, buttonBG_0 0%,buttonBG 100%);

    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")buttonBG_0_ie literal("endColorstr=")buttonBG literal(",GradientType=1 )");
}

*[dir="rtl"] .pressed.buttonSimple .gradient{
    background: -moz-linear-gradient(left, buttonBG 0%, buttonBG_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,buttonBG), color-stop(100%,buttonBG_0));
    background: -webkit-linear-gradient(left, buttonBG 0%,buttonBG_0 100%);
    background: -o-linear-gradient(left, buttonBG 0%,buttonBG_0 100%);
    background: -ms-linear-gradient(left, buttonBG 0%,buttonBG_0 100%);
    background: linear-gradient(to right, buttonBG 0%,buttonBG_0 100%);

    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")buttonBG literal("endColorstr=")buttonBG_0_ie literal(",GradientType=1 )");
}

.approveButton .gradient{
    background: -moz-linear-gradient(left, approveButtonBG3_0 0%, approveButtonBG3 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG3_0), color-stop(100%,approveButtonBG3));
    background: -webkit-linear-gradient(left, approveButtonBG3_0 0%,approveButtonBG3 100%);
    background: -o-linear-gradient(left, approveButtonBG3_0 0%,approveButtonBG3 100%);
    background: -ms-linear-gradient(left, approveButtonBG3_0 0%,approveButtonBG3 100%);
    background: linear-gradient(to right, approveButtonBG3_0 0%,approveButtonBG3 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")approveButtonBG3_0_ie literal("endColorstr=")approveButtonBG3 literal(",GradientType=1 )");
}

*[dir="rtl"] .approveButton .gradient{
    background: -moz-linear-gradient(left, approveButtonBG3 0%, approveButtonBG3_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG3), color-stop(100%,approveButtonBG3_0));
    background: -webkit-linear-gradient(left, approveButtonBG3 0%,approveButtonBG3_0 100%);
    background: -o-linear-gradient(left, approveButtonBG3 0%,approveButtonBG3_0 100%);
    background: -ms-linear-gradient(left, approveButtonBG3 0%,approveButtonBG3_0 100%);
    background: linear-gradient(to right, approveButtonBG3 0%,approveButtonBG3_0 100%);
}

.approveButton:hover .gradient{
    background: -moz-linear-gradient(left, approveButtonBG2_0 0%, approveButtonBG2 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG2_0), color-stop(100%,approveButtonBG2));
    background: -webkit-linear-gradient(left, approveButtonBG2_0 0%,approveButtonBG2 100%);
    background: -o-linear-gradient(left, approveButtonBG2_0 0%,approveButtonBG2 100%);
    background: -ms-linear-gradient(left, approveButtonBG2_0 0%,approveButtonBG2 100%);
    background: linear-gradient(to right, approveButtonBG2_0 0%,approveButtonBG2 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")approveButtonBG2_0_ie literal("endColorstr=")approveButtonBG2 literal(",GradientType=1 )");
}

*[dir="rtl"] .approveButton:hover .gradient{
    background: -moz-linear-gradient(left, approveButtonBG2 0%, approveButtonBG2_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG2), color-stop(100%,approveButtonBG2_0));
    background: -webkit-linear-gradient(left, approveButtonBG2 0%,approveButtonBG2_0 100%);
    background: -o-linear-gradient(left, approveButtonBG2 0%,approveButtonBG2_0 100%);
    background: -ms-linear-gradient(left, approveButtonBG2 0%,approveButtonBG2_0 100%);
    background: linear-gradient(to right, approveButtonBG2 0%,approveButtonBG2_0 100%);
}


.approveButton.pressed .gradient{
    background: -moz-linear-gradient(left, approveButtonBG4_0 0%, approveButtonBG4 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG4_0), color-stop(100%,approveButtonBG4));
    background: -webkit-linear-gradient(left, approveButtonBG4_0 0%,approveButtonBG4 100%);
    background: -o-linear-gradient(left, approveButtonBG4_0 0%,approveButtonBG4 100%);
    background: -ms-linear-gradient(left, approveButtonBG4_0 0%,approveButtonBG4 100%);
    background: linear-gradient(to right, approveButtonBG4_0 0%,approveButtonBG4 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")approveButtonBG4_0_ie literal("endColorstr=")approveButtonBG4 literal(",GradientType=1 )");
}

*[dir="rtl"] .approveButton.pressed .gradient{
    background: -moz-linear-gradient(left, approveButtonBG4 0%, approveButtonBG4_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG4), color-stop(100%,approveButtonBG4_0));
    background: -webkit-linear-gradient(left, approveButtonBG4 0%,approveButtonBG4_0 100%);
    background: -o-linear-gradient(left, approveButtonBG4 0%,approveButtonBG4_0 100%);
    background: -ms-linear-gradient(left, approveButtonBG4 0%,approveButtonBG4_0 100%);
    background: linear-gradient(to right, approveButtonBG4 0%,approveButtonBG4_0 100%);
}


.declineButton .gradient {
    background: -moz-linear-gradient(left, declineButtonBG3_0 0%, declineButtonBG3 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG3_0), color-stop(100%,declineButtonBG3));
    background: -webkit-linear-gradient(left, declineButtonBG3_0 0%,declineButtonBG3 100%);
    background: -o-linear-gradient(left, declineButtonBG3_0 0%,declineButtonBG3 100%);
    background: -ms-linear-gradient(left, declineButtonBG3_0 0%,declineButtonBG3 100%);
    background: linear-gradient(to right, declineButtonBG3_0 0%,declineButtonBG3 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")declineButtonBG3_0_ie literal("endColorstr=")declineButtonBG3 literal(",GradientType=1 )");
}

*[dir="rtl"] .declineButton .gradient{
    background: -moz-linear-gradient(left, declineButtonBG3 0%, declineButtonBG3_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG3), color-stop(100%,declineButtonBG3_0));
    background: -webkit-linear-gradient(left, declineButtonBG3 0%,declineButtonBG3_0 100%);
    background: -o-linear-gradient(left, declineButtonBG3 0%,declineButtonBG3_0 100%);
    background: -ms-linear-gradient(left, declineButtonBG3 0%,declineButtonBG3_0 100%);
    background: linear-gradient(to right, declineButtonBG3 0%,declineButtonBG3_0 100%);
}

.declineButton:hover .gradient{
    background: -moz-linear-gradient(left, declineButtonBG2_0 0%, declineButtonBG2 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG2_0), color-stop(100%,declineButtonBG2));
    background: -webkit-linear-gradient(left, declineButtonBG2_0 0%,declineButtonBG2 100%);
    background: -o-linear-gradient(left, declineButtonBG2_0 0%,declineButtonBG2 100%);
    background: -ms-linear-gradient(left, declineButtonBG2_0 0%,declineButtonBG2 100%);
    background: linear-gradient(to right, declineButtonBG2_0 0%,declineButtonBG2 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")declineButtonBG2_0_ie literal("endColorstr=")declineButtonBG2 literal(",GradientType=1 )");
}

*[dir="rtl"] .declineButton:hover .gradient{
    background: -moz-linear-gradient(left, declineButtonBG2 0%, declineButtonBG2_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG2), color-stop(100%,declineButtonBG2_0));
    background: -webkit-linear-gradient(left, declineButtonBG2 0%,declineButtonBG2_0 100%);
    background: -o-linear-gradient(left, declineButtonBG2 0%,declineButtonBG2_0 100%);
    background: -ms-linear-gradient(left, declineButtonBG2 0%,declineButtonBG2_0 100%);
    background: linear-gradient(to right, declineButtonBG2 0%,declineButtonBG2_0 100%);
}

.pressed.declineButton .gradient{
    background: -moz-linear-gradient(left, declineButtonBG4_0 0%, declineButtonBG4 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG4_0), color-stop(100%,declineButtonBG4));
    background: -webkit-linear-gradient(left, declineButtonBG4_0 0%,declineButtonBG4 100%);
    background: -o-linear-gradient(left, declineButtonBG4_0 0%,declineButtonBG4 100%);
    background: -ms-linear-gradient(left, declineButtonBG4_0 0%,declineButtonBG4 100%);
    background: linear-gradient(to right, declineButtonBG4_0 0%,declineButtonBG4 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")declineButtonBG4_0_ie literal("endColorstr=")declineButtonBG4 literal(",GradientType=1 )");
}

*[dir="rtl"] .declineButton.pressed .gradient{
    background: -moz-linear-gradient(left, declineButtonBG4 0%, declineButtonBG4_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG4), color-stop(100%,declineButtonBG4_0));
    background: -webkit-linear-gradient(left, declineButtonBG4 0%,declineButtonBG4_0 100%);
    background: -o-linear-gradient(left, declineButtonBG4 0%,declineButtonBG4_0 100%);
    background: -ms-linear-gradient(left, declineButtonBG4 0%,declineButtonBG4_0 100%);
    background: linear-gradient(to right, declineButtonBG4 0%,declineButtonBG4_0 100%);
}

.dialogTitle .gradient{
    background: -moz-linear-gradient(left, mainBG_0 0%, mainBG 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,mainBG_0), color-stop(100%,mainBG));
    background: -webkit-linear-gradient(left, mainBG_0 0%,mainBG 100%);
    background: -o-linear-gradient(left, mainBG_0 0%,mainBG 100%);
    background: -ms-linear-gradient(left, mainBG_0 0%,mainBG 100%);
    background: linear-gradient(to right, mainBG_0 0%,mainBG 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")mainBG_0_ie literal("endColorstr=")mainBG literal(",GradientType=1 )");
    
    height: dialogTitleHeight;
    bottom: dialogTitleHeight;
}

*[dir="rtl"] .dialogTitle .gradient{
    background: -moz-linear-gradient(left, mainBG 0%, mainBG_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,mainBG), color-stop(100%,mainBG_0));
    background: -webkit-linear-gradient(left, mainBG 0%,mainBG_0 100%);
    background: -o-linear-gradient(left, mainBG 0%,mainBG_0 100%);
    background: -ms-linear-gradient(left, mainBG 0%,mainBG_0 100%);
    background: linear-gradient(to right, mainBG 0%,mainBG_0 100%);
}


.buttonSimple:hover {
    background-color: whiteBG;
    border-color: border1;
    color: textColor3;
}

.buttonSimple.disabled {
    background-color: whiteBG;
    border-color: buttonBorder;
    color: border1;
}

/*без фона ie странно применяет фильтр прозрачности*/
@if user.agent ie9 {
    .buttonSimple.disabled img {
        background-color: whiteBG;
    }
}

.buttonSimple.pressed {
    background-color: buttonBG;
    border-color: border1;
    color: textColor3;
}

@eval approveButtonMinWidth kz.arta.synergy.components.style.client.Constants.buttonApproveMinWidth();
.approveButton {
    background-color: approveButtonBG3;
    border-color: approveButtonBG3;
    color: whiteBG;
    min-width: approveButtonMinWidth;
}

.approveButton:hover {
    background-color: approveButtonBG2;
    border-color: approveButtonBG2;
    color: whiteBG;
}

.approveButton.pressed {
    background-color: approveButtonBG4;
    border-color: approveButtonBG4;
    color: whiteBG;
}

.approveButton.disabled {
    background-color: approveButtonBG1;
    border-color: approveButtonBG1;
    color: whiteBG;
}


.declineButton {
    background-color: declineButtonBG3;
    border-color: declineButtonBG3;
    color: whiteBG;
    min-width: approveButtonMinWidth;
}

.declineButton:hover {
    background-color: declineButtonBG2;
    border-color: declineButtonBG2;
    color: whiteBG;
}

.declineButton.disabled {
    background-color: declineButtonBG1;
    border-color: declineButtonBG1;
    color: whiteBG;
}

.declineButton.pressed {
    background-color: declineButtonBG4;
    border-color: declineButtonBG4;
    color: whiteBG;
}


.mainTextBold {
    font-family: DroidSansBold;
    font-size:14px;
}

.mainText {
    font-family: DroidSans;
    font-size:14px;
}

.bigText {
    font-family: DroidSansBold;
    font-size:16px;
}

.indicatorNumber {
    font-family: DroidSans;
    font-size:13px;
}

@eval dialogTitleHeight kz.arta.synergy.components.style.client.Constants.dialogTitleHeight();

.dialogTitle {
    background: mainBG;
    height: dialogTitleHeight;
    line-height: dialogTitleHeight;
}

@eval dialogTitleLeftMargin kz.arta.synergy.components.style.client.Constants.dialogTitleLeftMargin();
@eval dialogTitleLabelRightPadding kz.arta.synergy.components.style.client.Constants.dialogTitleLabelRightPadding();

.dialogTitleLabel {
    font-family: DroidSansBold;
    font-size:16px;
    margin-left: dialogTitleLeftMargin;
    margin-right: dialogTitleLabelRightPadding;
    vertical-align: middle;
    color: whiteBG;
    height: dialogTitleHeight;

    vertical-align: top;

    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    cursor: default;

    white-space: nowrap;
}

@eval dialogBorderWidth kz.arta.synergy.components.style.client.Constants.dialogBorderWidth();
@eval dialogMinWidth kz.arta.synergy.components.style.client.Constants.dialogMinWidth();

.dialog {
    position: relative;
    box-sizing: border-box;
    -moz-box-sizing: border-box;

    min-width: dialogMinWidth;
    min-height: 84px;

    background: whiteBG;
    border: dialogBorderWidth solid border1;
}

.dialogGlass,.logoutDialog {
    opacity: 0.1;
    background-color: black;
    z-index: 1000;
}
.logoutDialog {
    background-color: red;
}

@eval dialogCloseButtonPadding kz.arta.synergy.components.style.client.Constants.dialogCloseButtonPadding();
@eval dialogCloseButtonRightMargin kz.arta.synergy.components.style.client.Constants.dialogCloseButtonRightMargin();
.dialogTitleButton {
    padding: dialogCloseButtonPadding;
    margin-top: 8px;
    float: right;
    background-repeat: no-repeat;
    margin-right: dialogCloseButtonRightMargin;
}
.dialogTitleButton:last-child{
    margin-right: 0px;
    margin-top: 10px;
}

@eval dialogContentPadding kz.arta.synergy.components.style.client.Constants.dialogContentPadding();
.dialogContent {
}

.dialogWithButtons .dialogContent {
    padding-bottom: 0px;
}

.popupPanel {
    padding : 0px;
}

@eval dialogButtonVMargin kz.arta.synergy.components.style.client.Constants.dialogNavigationButtonVMargin();
.dialogButton {
    margin-top: dialogButtonVMargin;
    margin-bottom: dialogButtonVMargin;
    display: inline-block;
}

@eval dialogButtonMargin kz.arta.synergy.components.style.client.Constants.dialogNavigationButtonMargin();
.dialogBackButton {
    margin-left: dialogButtonMargin;
}
.dialogMoreButton {
    margin-right: dialogButtonMargin;
}

.dropDownButton {
    border: borderWidth solid buttonBorder;
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
    background-color: buttonBG;

    position: relative;
    top: -1px;
    right: -1px;
}
.dropDownButton:hover {
    border-color: border1;
}
.dropDownButton:active {
    background-color: buttonPressed;
    border-color: border1;
}
.disabled .dropDownButton {
    background-color: whiteBG;
}

.approveButton .dropDownButton {
    background-color: approveButtonBG4;
    border-color: approveButtonBG4;
}
.approveButton .dropDownButton:active {
    background-color: approveButtonBG5;
}
.approveButton.disabled .dropDownButton {
    background-color: approveButtonBG1;
}

.contextMenuItem {
    display: block;
    border: 0px;
    padding-left: 10px;
    padding-right: 10px;
    height: 32px;
    line-height: 32px;
    overflow: hidden;
    white-space: nowrap;

    margin-bottom: 2px;
}
.contextMenuItem img {
    margin-right: 10px;
}
.contextMenuItem > div {
    display: inline-block;
    cursor: default;
    word-break: break-all;
}
.contextMenuItem > * {
    vertical-align: middle;
}

.contextMenuItem:last-child {
    margin-bottom: 0px;
}
/* у элементов меню начиная со второго есть отступ вверху*/
/*.contextMenuItem + .contextMenuItem {*/
    /*margin-top: 2px;*/
/*}*/

/*здесь не используется :hover из-за возможности выделения клавиатурой*/
.contextMenuItem.over, .contextMenuItem.over.selected {
    background-color: #D5D8DA;
}

.contextMenuItem.selected {
    background-color: selectColor;
}

.green .contextMenuItem.over{
    background-color: approveButtonBG2;
}

.contextMenu {
    font-family: DroidSans;
    font-size: 14px;

    min-width: 100px;
    min-height: 32px;
    border: borderWidth solid buttonBorder;
    background-color: whiteBG;
    color: stackPanelText2;
    vertical-align: middle;
    margin-right: 0px;
    z-index: 10000;
}

.contextMenu.green {
    background-color: approveButtonBG4;
    color: whiteBG;
    border-color: approveButtonBG4;
}

.contextMenuItem.menuSeparator {
    border-bottom: 1px solid tabBg2;
}
.contextMenu.green .contextMenuItem.menuSeparator {
    border-color: approveButtonBG3;
}

@eval commonInputPadding kz.arta.synergy.components.style.client.Constants.commonInputPadding();
.commonInput, .artaText {
    border-color: buttonBorder;
    border-width: borderWidth;
    border-style: solid;
    border-radius: borderRadius;
    background-color: whiteBG;
    color: textColor2;
    padding: commonInputPadding;
    vertical-align: top;
    outline: none;
    margin: 0px;
}

.artaText {
    border: none;
    overflow: hidden;
    width: 100%;
    -moz-box-sizing:    border-box;
    -webkit-box-sizing: border-box;
    box-sizing:        border-box;
    line-height: 19px;
}

.artaTextPanel {
    border-color: buttonBorder;
    border-width: 1px;
    border-style: solid;
    border-radius: borderRadius;
    background-color: whiteBG;
    display: inline-block;
    vertical-align: top;
    padding: commonInputPadding;
}

.commonInput {
    height: 30px;
    padding: 0 8px;
}

.commonInput.disabled, .artaText.disabled, .artaTextPanel.disabled {
    background-color: buttonBG;
    color: border1;
}

.commonInput:focus, .artaText:focus, .artaTextPanel.focus {
    border-color: border1;
    color: textColor2;
}

/*убираем крестик удаления в поле ввода, который отображают ie10-11*/
*::-ms-clear {
    display: none;
    width: 0;
    height: 0;
}

.commonInput.invalid, .artaText.invalid, .artaTextPanel.invalid {
    border-color: declineButtonBG1;
    color: textColor2;
}

.commonInput.placeHolder, .artaText.placeHolder, .commentInput > textarea.placeHolder{
    color: border1;
}

@eval comboMinWidth kz.arta.synergy.components.style.client.Constants.comboMinWidth();
@eval dateInputWidth kz.arta.synergy.components.style.client.Constants.dateInputWidth();
.comboBox, .dateInput {
    min-width: comboMinWidth;
    text-align: left;
    height: 30px;
    line-height: 30px;
    border: solid borderWidth buttonPressed;
    border-radius: borderRadius;

    display:inline-block;
}

.dateInput {
    min-width: 0;
    vertical-align: top;
}

.dateInput.invalid {
    border: solid borderWidth declineButtonBG1;
}

.dateInput.invalid .buttonSimple{
    border-top-color: declineButtonBG1;
    border-bottom-color: declineButtonBG1;
    border-right-color: declineButtonBG1;
}

.dateInput.focus {
    border: solid borderWidth border1;
}

.dateInput.focus .buttonSimple{
    border-top-color: border1;
    border-bottom-color: border1;
    border-right-color: border1;
}

.comboBox .buttonSimple, .dateInput .buttonSimple{
    margin-top: -1px;
    margin-right: -1px;

    border-bottom-left-radius: 0px;
    border-top-left-radius: 0px;
    border: borderWidth solid buttonPressed;
    background-color: buttonBG;

    display: inline-block;
    float: right;
}
.comboBox.focus, .comboBox.focus .buttonSimple{
    border-color: border1;
}

.comboBox .buttonSimple:hover, .dateInput .buttonSimple:hover{
    border-color: border1;

}

.comboBox.pressed .buttonSimple {
    border-color: border1;
    background-color: buttonPressed;
}

.comboBox .buttonSimple.pressed, .dateInput .buttonSimple.pressed{
    border-color: border1;
    background-color: buttonPressed;
}

.comboBox .commonInput, .dateInput .commonInput{
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
    border: 0px;
    margin: 0px;
}

.comboBox.disabled .commonInput, .dateInput.disabled .commonInput{
    background-color: buttonBG;
    color: border1;
}

.comboBox.disabled .buttonSimple, .dateInput.disabled .buttonSimple{
    border-color: buttonPressed;
    background-color: buttonBG;
}

@if user.agent ie9 {
    .dateInput.disabled .buttonSimple img {
        background-color: buttonBG;
    }
}

.vscroll {
    width: 17px;
    height: 200px;
    background-color: buttonBG;
}

.vscroll.dark {
    background-color: scrollDark;
}

.vscroll img {
    width: 17px;
    height: 18px;
    display: block;
    background-color: buttonBG;
}

.vscroll .scrollbar {
    width: 17px;
    background-color: buttonBorder;
    display: block;
    cursor: default;
}

.vscroll.dark .scrollbar {
    background-color: scrollDarkBar;
}

.vscroll .scrollbar.pressed {
    background-color: buttonPressed;
}

.vscroll.dark .scrollbar.pressed {
    background-color: scrollDarkBarPressed;
}

.hscroll {
    width: 200px;
    height: 17px;
    background-color: buttonBG;
    display: inline-block;
}

.hscroll.dark {
    background-color: scrollDark;
}

.hscroll img {
    width: 18px;
    height: 17px;
    display: inline-block;
    background-color: buttonBG;
}

.hscroll .scrollbar {
    height: 17px;
    background-color: buttonBorder;
    display: inline-block;
    cursor: default;
}

.hscroll.dark .scrollbar {
    background-color: scrollDarkBar;
}

.hscroll .scrollbar.pressed {
    background-color: buttonPressed;
}

.hscroll.dark .scrollbar.pressed {
    background-color: scrollDarkBarPressed;
}



.groupButtonPanel {
    display: inline-block;
    height: 32px;
    vertical-align: top;
}

.tagInput {
    position:relative;
    border-radius: borderRadius;
    border: 1px buttonBorder solid;
    height: 30px;
    vertical-align: top;
    overflow : visible;
    line-height: 0;
}
.tagInput.focus, .tagInput.focus .buttonSimple {
    border-color: border1;
}

.tagInput .commonInput{
    border-width: 0px;
    padding: 0 0 0 1px;
    width: 100%;
}

.tagInput .buttonSimple {
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
    position: absolute;
    top: -1px;
    right: -1px;
}

.tagInput .buttonSimple.disabled,
.tagInput.disabled,
.tagInput .buttonSimple.disabled img {
    background-color: buttonBG;
}

.tagInput .tag {
    margin-left: 2px;
}

.tagInput.disabled .tag {
    opacity: 0.5;
    filter: literal("alpha(opacity=50)");
}

@eval tagHeight kz.arta.synergy.components.style.client.Constants.tagHeight();
@eval tagMaxWidth kz.arta.synergy.components.style.client.Constants.tagMaxWidth();

.tag {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    display: inline-block;
    position: relative;
    border-radius: 3px;
    background-color: tagBG;
    padding: 0 8px;
    height: tagHeight;
    line-height: 26px;
    max-width: tagMaxWidth;
    vertical-align: top;
    white-space: nowrap;
    color: textColor2;
}

.tag .gradient, .path .gradient {
    background: -moz-linear-gradient(left, tagBG_0 0%, tagBG 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,tagBG_0), color-stop(100%,tagBG));
    background: -webkit-linear-gradient(left, tagBG_0 0%,tagBG 100%);
    background: -o-linear-gradient(left, tagBG_0 0%,tagBG 100%);
    background: -ms-linear-gradient(left, tagBG_0 0%,tagBG 100%);
    background: linear-gradient(to right, tagBG_0 0%,tagBG 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")tagBG_0_ie literal("endColorstr=")tagBG literal(",GradientType=1 )");
}

*[dir="rtl"] .tag .gradient, *[dir="rtl"] .path .gradient{
    background: -moz-linear-gradient(left, tagBG 0%, tagBG_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,tagBG), color-stop(100%,tagBG_0));
    background: -webkit-linear-gradient(left, tagBG 0%,tagBG_0 100%);
    background: -o-linear-gradient(left, tagBG 0%,tagBG_0 100%);
    background: -ms-linear-gradient(left, tagBG 0%,tagBG_0 100%);
    background: linear-gradient(to right, tagBG 0%,tagBG_0 100%);
}

.tag ::selection {
    background-color: selectColor;
}

.tag > div {
    display: inline-block;
}

.tag img {
    vertical-align: top;
    margin-left: 8px;
    margin-top: 5px;
    cursor: pointer;
}

.disabled .tag img {
    cursor: auto;
}

@eval tagIndicatorPadding kz.arta.synergy.components.style.client.Constants.tagIndicatorPadding();
.tagIndicatorContent {
    padding: tagIndicatorPadding;
}
/*предотвращение collapse'а родителя т.к. внутри только floats*/
.tagIndicatorContent:after {
    content: " ";
    display: block;
    height: 0;
    clear: both;
}
@eval tagInterval kz.arta.synergy.components.style.client.Constants.tagInterval();
.tagIndicatorContent .tag {
    margin-bottom: tagInterval;
    /*это небольшой хак, чтобы inline-block отображались на новой строке*/
    float:left;
    clear:left;
    max-width: 200px;
}
.tagIndicatorContent .tag:last-child {
    margin-bottom: 0px;
}

.tagIndicator {
    margin-top: 10px;
    position: relative;
    background: white;
    border: 1px solid buttonBorder;
    display: inline-block;
    line-height: 2px;
}
.tagIndicator:after, .tagIndicator:before {
    bottom: 100%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
}

.tagIndicator:after {
    border-color: rgba(0, 0, 0, 0);
    border-bottom-color: whiteBG;
    border-width: 10px;
    border-left-width: 5px;
    border-right-width: 5px;
}
.tagIndicator:before {
    border-color: rgba(226, 226, 226, 0);
    border-bottom-color: #e2e2e2;
    border-width: 11px;
    border-left-width: 6px;
    border-right-width: 6px;
    margin-left: -1px;
}
.tagIndicator.leftIndicator:before, .tagIndicator.leftIndicator:after {
    left: 17px;
}
.tagIndicator.rightIndicator:before, .tagIndicator.rightIndicator:after {
    right: 17px;
}
.tagIndicator.centerIndicator:before, .tagIndicator.centerIndicator:after {
    left: 46%;
}

p {
    margin: 0px;
}

.datePicker {
    width: 293px; /* -2 для границ */
    border-color: buttonBorder;
    border-width: 1px;
    border-style: solid;
    text-align: center;
    display: inline-block;
}

.datePicker.dark {
    background-color: navigatorBG;
    border-color: navigatorBG;
}

.datePickerCalendar {
    margin-top: 26px;
    margin-bottom: 20px;
}

.datePickerTop {
    line-height: 16px;
    margin: 0 15px;
}
.datePickerTop:first-child {
    margin-top: 15px;
}
.datePickerTop:last-child {
    margin-bottom: 15px;
}
.datePickerTop img {
    cursor: pointer;
}
.datePickerTop img:first-child {
    float: left;
}
.datePickerTop img:last-child {
    float: right;
}

.datePickerTop span {
    color: textColor2;
}

.datePickerTop.dark span {
    color: buttonPressed;
}

.dayWeekPanel {
    line-height: 17px;
    margin-bottom: 12px;
}

.dayWeekPanel span {
    display: inline-block;
    padding-right: 21px;
    color: declineButtonBG4;
    width: 16px;
}

.dayWeekPanel span:last-child {
    padding-right: 0;
}

.daysPanel {
    line-height: 14px;
}

.daysPanel:first-child {
    margin-top: 12px;
}

.daysPanel span {
    display: inline-block;
    padding-right: 10.5px;
    padding-left: 10.5px;
    padding-bottom: 6px;
    padding-top: 6px;
    width: 16px;
}

.daysPanel span:last-child {
    margin-right: 0;
}

.daysPanel:last-child {
    margin-bottom: 20px;
}

.month, .thisMonth, .outMonth {
    cursor: pointer;
}

.month {
    color: calendarDays;
}

.thisMonth {
    color: black;
}

.outMonth {
    color: buttonPressed;
}

.month.dark {
    color: border1;
}

.thisMonth.dark {
    color: whiteBG;
}

.outMonth.dark {
    color: textColor1;
}

.month.over,  .thisMonth.over, .outMonth.over{
    background-color: calendarOver;
}

.month.pressed,  .thisMonth.pressed, .outMonth.pressed {
    background-color: selectColor;
}

.month.pressed.dark,  .thisMonth.pressed.dark, .outMonth.pressed.dark {
    background-color: declineButtonBG4;
}

.calendarPopup {
    padding: 0;
    border-width: 0;
    z-index: 10000;
    background-color: whiteBG;
}

.calendarPopup.dark {
    background-color: navigatorBG;
}

.dateTimeInput {
    display: inline-block;
    vertical-align: top;
}

.searchResult {
    position:relative;
    border-radius: borderRadius;
    border: 1px buttonBorder solid;
    overflow: hidden;
    display: inline-block;
    white-space: nowrap;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
}

.searchResult .buttonSimple {
    border-width: 0px;
    vertical-align: top;
}
.searchResult.disabled .buttonSimple {
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
}

.searchResult.disabled,
.searchResult.disabled *,
.searchResult.disabled img,
.searchResult.disabled *.disabled{
    background-color: buttonBG;
}

.searchResult .buttonSimple.pressed {
    background-color: whiteBG;
}

.searchResult .commonInput {
    border: none;
    padding: 0px;
    width: 100%;
}

.tabs{
    width: 100%;
    overflow: hidden;
    white-space: nowrap;
    display: inline-block;
    position: relative;

    left: 0px;

    -webkit-transition: left 0.2s, right 0.2s;
    transition: left 0.2s, right 0.2s;
    -ms-transition: left 0.2s, right 0.2s;

}
.tabsContainer{
    position: absolute;
    left: 4px;
    right: 6px;
}
@eval tabScrollButtonWidth kz.arta.synergy.components.style.client.Constants.tabScrollButtonWidth();
.tabsContainer > .buttonSimple {
    position: absolute;
    top: 0px;
    z-index: 9;

    -moz-box-sizing: border-box;
    box-sizing: border-box;

    min-width: tabScrollButtonWidth;
    top: 1px;
    height: 31px;

    border-radius: 0px;
}
.tabsContainer > .buttonSimple:first-child {
    border-top-left-radius: 4px;
}
*[dir="rtl"] .tabsContainer > .buttonSimple:first-child {
    border-top-left-radius: 0px;
    border-top-right-radius: 4px;
}
.tabsContainer > .buttonSimple:last-child {
    border-top-right-radius: 4px;
}
*[dir="rtl"] .tabsContainer > .buttonSimple:last-child {
    border-top-right-radius: 0px;
    border-top-left-radius: 4px;
}

@eval tabMaxWidth kz.arta.synergy.components.style.client.Constants.tabMaxWidth();
@eval tabHeight kz.arta.synergy.components.style.client.Constants.tabHeight();
.tab{
    display: inline-block;
    position: relative;
    z-index: 5;
    vertical-align: top;


    border: 1px solid buttonBorder;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;

    background-color: tabBg2;
    color: border1;

    box-sizing: border-box;
    -moz-box-sizing: border-box;
    max-width: tabMaxWidth;
    height: 31px;
    line-height: 30px;

    /*все вкладки кроме выбранной имеют этот отступ*/
    margin-top: 1px;
    cursor: default;

    left: 0px;
    right: 0px;
    -webkit-transition: left 0.5s ease-out, right 0.5s ease-out;
    transition: left 0.5s ease-out, right 0.5s ease-out;
    -ms-transition: left 0.5s ease-out, right 0.5s ease-out;
}
.tab img {
    vertical-align: top;
    margin: 6px dialogCloseButtonRightMargin 0 0;
    cursor: pointer;
}
.tab > div {
    margin: 0 commonInputPadding;
    text-align: center;
}
.tab + .tab {
    border-left-style: hidden;
}
.tab.selected {
    border-color: buttonPressed;
    background-color: whiteBG;
    color: textColor2;
    margin-top: 0px;

    height: 32px;

    border-bottom-color: whiteBG;
}

.tab .gradient, .header .gradient {
    background: -moz-linear-gradient(left, tabBg2_0 0%, tabBg2 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,tabBg2_0), color-stop(100%,tabBg2));
    background: -webkit-linear-gradient(left, tabBg2_0 0%,tabBg2 100%);
    background: -o-linear-gradient(left, tabBg2_0 0%,tabBg2 100%);
    background: -ms-linear-gradient(left, tabBg2_0 0%,tabBg2 100%);
    background: linear-gradient(to right, tabBg2_0 0%,tabBg2 100%);

    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")tabBg2_0_ie literal("endColorstr=")tabBg2 literal(",GradientType=1 )");
}
*[dir="rtl"] .tab .gradient, *[dir="rtl"] .header .gradient{
    background: -moz-linear-gradient(left, tabBg2 0%, tabBg2_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,tabBg2), color-stop(100%,tabBg2_0));
    background: -webkit-linear-gradient(left, tabBg2 0%,tabBg2_0 100%);
    background: -o-linear-gradient(left, tabBg2 0%,tabBg2_0 100%);
    background: -ms-linear-gradient(left, tabBg2 0%,tabBg2_0 100%);
    background: linear-gradient(to right, tabBg2 0%,tabBg2_0 100%);
}

.tab.selected .gradient {
    background: -moz-linear-gradient(left, whiteBG_0 0%, whiteBG 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,whiteBG_0), color-stop(100%,whiteBG));
    background: -webkit-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: -o-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: -ms-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: linear-gradient(to right, whiteBG_0 0%,whiteBG 100%);

    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")whiteBG_0_ie literal("endColorstr=")whiteBG literal(",GradientType=1 )");
}
*[dir="rtl"] .tab.selected .gradient {
    background: -moz-linear-gradient(left, whiteBG 0%, whiteBG_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,whiteBG), color-stop(100%,whiteBG_0));
    background: -webkit-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: -o-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: -ms-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: linear-gradient(to right, whiteBG 0%,whiteBG_0 100%);
}
.tabContent{
    border: 1px solid buttonBorder;
    background-color: whiteBG;
    border-radius: 4px;

    height: auto;

    position: absolute;
    top: tabHeight;
    /*эти два пикселя для того, чтобы было видно границы*/
    bottom: 0px;
    right: 0px;
    left: 0px;
}

.collapsingTitle{
    height: 38px;
    padding-left: 18px;
    padding-right: 14px;
    line-height: 38px;
}

.collapsingTitle img {
    -webkit-transition: -webkit-transform 0.2s;
    -moz-transition: transform 0.2s;
    transition: transform 0.2s;
}
@if !user.agent ie9 {
    .collapsingPanel.open .collapsingTitle img {
        transform: rotate(90deg);
        -webkit-transform: rotate(90deg);
        -ms-transform: rotate(90deg);
    }
    *[dir="rtl"] .collapsingPanel.open .collapsingTitle img {
        transform: rotate(-90deg);
        -webkit-transform: rotate(-90deg);
        -ms-transform: rotate(-90deg);
    }
}

.collapsingPanel{
    border: 1px buttonBorder solid;
    border-radius: 4px;
    color: textColor2;
}
.collapsingContent {
    overflow: hidden;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
}

/*Преобразования для закрытия*/
.collapsingTitle + div {
    height: 0px;
    opacity: 0;
    -webkit-transition: height 200ms 250ms, opacity 200ms;
    transition: height 200ms 250ms, opacity 200ms;
    -ms-transition: height 200ms 250ms, opacity 200ms;
}
/*Преобразования для открытия*/
.collapsingPanel.open .collapsingTitle + div {
    opacity: 1;
    -webkit-transition: height 200ms, opacity 200ms 250ms;
    transition:  height 200ms, opacity 200ms 250ms;
    -ms-transition:  height 200ms, opacity 200ms 250ms;
}

.stackPanel {
    width: 292px;
    box-sizing: border-box;
    -moz-box-sizing: border-box;

    background-color: navigatorBG;
    border: 1px solid navigatorBG;
    border-left-style: none;
}
.stackPanel.white {
    background-color: panelBG;
    border-color: buttonBG;
    border-left-style: none;
}


.stack {
    width: 291px;
    position: relative;
}
.stack + .stack {
    border-top: 1px solid navigatorBG;
}
.stackPanel.white .stack {
    border-color: buttonBG;
}

@eval stackHeight kz.arta.synergy.components.style.client.Constants.stackHeight();
.stack .title {
    cursor: pointer;
    height: stackHeight;
    line-height: stackHeight;
    display: block;
    padding-left: 18px;

    color: buttonPressed;
    background-color: mainBG;
}
.stackPanel.white .stack .title {
    color: stackPanelText2;
    background-color: whiteBG;
}

.stackPanel .stack .indicator{
    height: stackHeight;
    width: 13px;
    position: absolute;
    right: -1px;
    top: 0;
    background-color: #C23A3A;
    display: none;
}

.stackPanel.white .stack .indicator {
    background-color: #03A2E4;
    right: 0;
}
.stackPanel .stack.open {
    border-bottom-style: none;
}
.stack.open .title {
    border-bottom: 1px solid navigatorBG;
    color: whiteBG;
}
.stackPanel.white .stack.open .title{
    color: textColor2;
    background-color: stackPanelBG;
    border-bottom-color: buttonPressed;
}
.stack.open .indicator {
    display: block;
}
.stack.disabled .title {
    color: stackPanelText2;
    cursor: default;
}
.stackPanel.white .stack.disabled .title {
    color: buttonPressed;
}

.stack .stackContent {
    background-color: navigatorBG;
    overflow: hidden;
    position: relative;
}
.stackPanel.white .stack .stackContent {
    background-color: panelBG;
}

@if !user.agent ie9 {
    .stackPanel .indicator + div {
        -webkit-transition: height 250ms ease-out;
        transition: height 250ms ease-out;
        -ms-transition: height 250ms ease-out;
    }
}

.stackPanel .indicator + div {
    height: 0;
}

.checkbox {
    cursor: pointer;
}

.radio input[type=radio] {
    display: none;
}
@sprite .radio label {
    gwt-image: "radioOff";
    width: 16px;
    height: 16px;
    cursor: pointer;

    display:inline-block;
    vertical-align: middle;
}
@sprite .radio input[type=radio]:checked + label {
    gwt-image: "radioOn";
}
@sprite .radio.disabled label {
    gwt-image: "radioDisabled";
    cursor: default;
}
@sprite .radio.disabled input[type=radio]:checked + label {
    gwt-image: "radioOnDisabled";
}

:focus {
    outline: none;
}

.tableWhole {
    border: 1px solid buttonPressed;
    border-radius: 4px;
    overflow: hidden;
    position: relative;
}

.hat {
    height: 39px;
    line-height: 39px;
    border-bottom: 1px solid buttonPressed;
}
.tableWhole .hat > span {
    color: textColor2;
    margin-left: 16px;
}
.tableWhole .hat > .buttonSimple {
    float: right;
    margin-right: 4px;
    margin-top: 4px;
}
.tableWhole .hat > .pager {
    float: right;
    margin-top: 4px;
    margin-right: 4px;
}

.table {
    border-collapse: separate;
    border-spacing: 0;
    table-layout: fixed;
    width: 0;
}
.table.notFull {
    border-bottom: 1px solid buttonBG;
}

.table td {
    border: 1px dotted buttonBG;

    -webkit-background-clip: content-box;
    -moz-background-clip: content-box;
    background-clip: content-box;

    box-sizing: border-box;
    -moz-box-sizing: border-box;

    padding: 0px;
    text-align: left;
    color: textColor1;
    border-bottom-style: none;
    border-left-style: none;
    overflow: hidden;
    white-space: nowrap;

    background-clip: padding-box;

    /*Шрифт должен наследоваться откуда-нибудь сверху, но standard.css переписывает шрифт
    * для всех td. Потом надо поменять.
    */
    font-family: DroidSans;
    font-size:14px;
}

.table.multipleLines td {
    white-space: normal;
    word-break: break-all;
}

.table td > div {
    line-height: 26px;
}

.table tr:nth-child\(even\) {
    background-color: tableString2;
}

.table tr:first-child td {
    border-top-style: none;
}
.table tr:last-child td {
    border-bottom-style: none;
}
.table tr td:first-child {
    border-left-style: none;
}
/*последний ряд, не обязательно последний td*/
.table tr.last td {
    border-bottom-style: dotted;
}
.table tr:last-child td:first-child {
    border-bottom-left-radius: 4px;
}
.table tr:last-child td:last-child {
    border-bottom-right-radius: 4px;
}

.table td input {
    height: 26px;
    outline: none;
    border: 0;
    display: inline-block;
    width: 100%;
    color: textColor1;
    padding: 0;
}

.table td.selected, .table tr.selected {
    background-color: selectColor;
}

.table td:hover {
    background-color: beige;
}
.table.onlyRows tr:hover {
    background-color: beige;
}
.table.onlyRows td:hover {
    background-color: inherit;
}

.table tr td.edit {
    border-style: solid;
    border-bottom-style: none;
    border-color: border1;
    background-color: whiteBG;
    height: 25px;
}
.table tr.last td.edit {
    border-bottom-style: solid;
}
.table tr.edit:first-child td {
    height: 25px;
}
.table tr.edit:first-child td > * {
    height: 25px;
}
.table tr:last-child td.edit {
    border-bottom-style: solid;
}
.table tr td.underEdit {
    border-top: 1px solid border1;
}

@eval tableDividerWidth kz.arta.synergy.components.style.client.Constants.tableDividerWidth();
.tableDivider {
    width: tableDividerWidth;
    cursor: col-resize;
    position: absolute;
    top: 0;
    bottom: 0;
}
.tableDivider.disabled {
    cursor: auto;
    visibility: hidden;
}
.tableDivider.drag {
    width: 1px;
    background-color: border1;
}

.headersTableContainer {
    height: 32px;
    width: 100%;
    position: relative;
    background-color: tabBg2;
    border-bottom: 1px solid buttonPressed;
}
.headersTable {
    position: absolute;
    left: 0;
    top: 0;
    border-collapse: separate;
    border-spacing: 0;
    table-layout: fixed;
}
.headersTable td {
    padding: 0;
    box-sizing: border-box;
    -moz-box-sizing: border-box;

    border-right: 1px solid buttonPressed;
    border-spacing: 0;
    background-color: tabBg2;
    height: 32px;
}
.header{
    color: textColor2;
    padding-left: 12px;
    padding-right: 6px;
    line-height: 32px;
    height: 32px;
    vertical-align: top;
    position: relative;
    background-color: tabBg2;

    /*граница включается, когда хедер перемещается*/
    border: 1px solid buttonPressed;
    border-style: none;
}
.header img {
    position: absolute;
    right: 10px;
    top: 8px;
    margin-left: 5px;
}

.headerDivider {
    background-color: selectColor;
    height: 32px;
    position: fixed;
    visibility: hidden;
}

.tree, .treeScroll {
    border: 1px solid buttonPressed;
    background-color: whiteBG;
}
/*если дерево внутри скролла, то границы нет*/
.treeScroll .tree {
    border-width: 0;
}

.tree.dark, .treeScroll.dark {
    border-color: navigatorBG;
    background-color:navigatorBG;
}

.treeFavorite {
    border-bottom-color: buttonPressed;
    border-bottom-style: solid;
    border-bottom-width: 1px;
    padding-bottom: 16px;
}

.treeItem {
    cursor: default;
    color: textColor1;
    line-height: 20px;
    white-space: nowrap;
    margin-left: 19px;
}
.tree.dark .treeItem {
    color: buttonPressed;
}
.treeItem.selected {
    color: textColor2;
}
.tree.dark .treeItem.selected {
    color: whiteBG;
}
/*индикатор*/
.treeItem img, .treeItem .loader {
    cursor: pointer;
    position: relative;
}
.treeItem img:first-child, .treeItem .loader {
    margin-right: 6px;
    top: 3px;
}
/*иконка*/
.treeItem img + img {
    cursor: default;
    margin-right: 5px;
    top: 3px;
}
.treeItem span {
    white-space: nowrap;
}

.treeItem {
    margin-top: 16px;
}
.tree > .treeItem:first-child {
    margin-top: 24px;
}

.tree > .treeItem:last-child {
    margin-bottom: 24px;
}

@if !user.agent ie9 {
    .treeItem .content {
        -webkit-transition: height 0.3s ease-out;
        transition: height 0.3s ease-out;
        -ms-transition: height 0.3s ease-out;
    }
}
.treeItem .content {
    overflow: hidden;
}

@eval pagerHeight kz.arta.synergy.components.style.client.Constants.pagerHeight();
.pager {
    height: pagerHeight;
    overflow: visible;
    border: 1px solid buttonBorder;
    border-radius: 4px;
    position: relative;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
}

@eval pagerButtonWidth kz.arta.synergy.components.style.client.Constants.pagerButtonWidth();
.pager .buttonSimple {
    width: 32px;
    position: absolute;
    top: -1px;
}
.pager .buttonSimple:hover {
    z-index: 1;
}
.pager .buttonSimple:first-child {
    left: -1px;
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
}
.pager .buttonSimple:last-child {
    right: -1px;
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
}
@eval pagerTextWidth kz.arta.synergy.components.style.client.Constants.pagerTextWidth();
@eval pagerTextPadding kz.arta.synergy.components.style.client.Constants.pagerTextPadding();

.pager span {
    display: inline-block;
    width: pagerTextWidth;
    line-height: 14px;
    padding-left: pagerTextPadding;
    padding-right: pagerTextPadding;
    position: absolute;
    color: textColor2;
    text-align: center;
}

.weekChooser {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    height: 32px;

    border: 1px solid buttonPressed;
    background-color: white;
}

@eval weekdayChooserPadding kz.arta.synergy.components.style.client.Constants.weekdayChooserPadding();
.day {
    display: inline-block;
    height: 30px;
    line-height: 30px;
    color: stackPanelText2;
    text-align: center;
    cursor: default;
    padding-left: weekdayChooserPadding;
    padding-right: weekdayChooserPadding;
    cursor: pointer;
}
.day.selected {
    background-color: selectColor;
}

.repeatChooser .buttonSimple {
    background-color: buttonBG;
}

.repeatChooser .buttonSimple.pressed {
    background-color: buttonPressed;
}

.comment {
    position: relative;
    padding: 16px;
    border-bottom: 1px solid buttonBorder;
    white-space: pre-wrap;
    word-wrap: break-word;
    cursor: pointer;
}
.commentsPanel.dark .comment {
    border-bottom-color: searchBG;
    border-bottom-style: dotted;
}

.comment > img {
    position:  absolute;
    top: 16px;
    right: 16px;
    cursor: pointer;
    opacity: 0.5;
    visibility: hidden;
}
.comment:hover >img {
    visibility: visible;
}
.comment > img:hover {
    opacity: 1;
}
.comment.accept > img, .comment.decline > img {
    opacity: 1;
    cursor: default;
    visibility: visible;
}

.comment .name, .comment .date {
    color: border1;
    display: inline-block;
}
.comment.accept .name, .comment.accept .date {
    color: approveButtonBG5;
}
.comment.decline .name, .comment.decline .date {
    color: declineButtonBG4;
}

.commentsPanel.dark .comment .name, .commentsPanel.dark .comment .date {
    color: border1;
}

.comment .content {
    color: textColor1;
    margin-top: 13px;
    height: auto;
}

.commentsPanel.dark .content {
    color: buttonPressed;
}

.comment .content img {
    position: relative;
    margin-right: 5px;
    top: 1px;
}

@eval commentInputCommentLineHeight kz.arta.synergy.components.style.client.Constants.commentInputCommentLineHeight();

.commentInput {
    position: relative;
    font-size: 0;
    width: 100%;
}
.commentInput > textarea {
    /*line-height: commentInputCommentLineHeight;*/
    height: commentInputCommentLineHeight;

    background-color: #ffffff;

    box-sizing: border-box;
    -moz-box-sizing: border-box;

    resize: none;
    border: 0;
    margin: 0;
    padding: commonInputPadding;
    padding-right: 32px;

    color: textColor2;

    width: 100%;

    overflow: hidden;
}
.commentsPanel.dark .commentInput > textarea {
    color: border1;
    background-color: searchBG;
}

.commentInputAccept {
    padding: 8px;
    position: absolute;
    bottom: 0;
    right: 0;
    opacity: 0.5;
    z-index: 1000;
}

.commentInputAccept:hover {
    opacity: 1;
    cursor: pointer;
}

.commentsPanel {
    position: relative;
    border: 1px solid buttonBorder;
}
.commentsPanel.dark {
    border-color: navigatorBG;
}
.commentsPanel > div:first-child {
    position: absolute;
    top: 0;
    border-bottom: 1px solid buttonBorder;
}
.commentsPanel.dark > div:first-child {
    border-style: none;
}
.commentsPanel > div:last-child {
    bottom: 0;
}

@eval taskbarItemPadding kz.arta.synergy.components.style.client.Constants.taskbarItemPadding();
@eval taskbarImageMargin kz.arta.synergy.components.style.client.Constants.taskbarImageMargin();

.taskBar {
    position:relative;
    padding: 5px;
    border: 1px solid buttonPressed;
    height: 28px;
    white-space: nowrap;
}

.taskBar > .item, .taskBarIndicator .content > .item {
    display: inline-block;
    border: 1px solid buttonPressed;
    position: relative;
    height: 26px;
    color: stackPanelText2;
    cursor: pointer;
    max-width: 318px;
}
.taskBar > .item.open, .taskBarIndicator .content > .item.open {
    border-color: border1;
    color: textColor2;
}
.taskBar > .item + .item {
    margin-left: taskbarItemPadding;
}
.taskBar > .item > div,
.taskBarIndicator .content > .item > div {
    display: inline;
    overflow: hidden;
    position: absolute;
    left: 31px;
    right: 10px;
    top: 5px;
}
.taskBar > .item > img,
.taskBarIndicator .content > .item > img {
    position: absolute;
    left: 5px;
    top: 5px;
}

.taskBar > .item.indicator {
    position: absolute;
    right: 5px;
    top: 5px;
    bottom: 5px;

    border: 1px solid buttonPressed;
}

.taskBar > .item.indicator > div {
    right: 5px;
}

.taskBarIndicator {
    border: 1px solid buttonPressed;
    background-color: #ffffff;
}

.taskBarIndicator .content {
    padding: 3px;
}
.taskBarIndicator .content:after {
    content: " ";
    display: block;
    height: 0;
    clear: both;
}

.taskBarIndicator .content > .item {
    float:left;
    clear: left;
    white-space: nowrap;
}

.taskBarIndicator .content > .item + .item {
    margin-top: 5px;
}
.taskBarIndicator:after, .taskBarIndicator:before {
    top: 100%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
}

.taskBarIndicator:after {
    border-color: rgba(255, 255, 255, 0);
    border-top-color: #ffffff;
    border-width: 10px;
    border-left-width: 5px;
    border-right-width: 5px;
    right: 11px;
}
.taskBarIndicator:before {
    border-color: rgba(214, 214, 214, 0);
    border-top-color: buttonPressed;
    border-width: 11px;
    border-left-width: 6px;
    border-right-width: 6px;
    right: 10px;
}

.treeTableItem > img, .treeTableItem .loader {
    display: inline-block;
    vertical-align: top;
    position: relative;
    top: 7px;
    margin-right: 6px;
}
.treeTableItem .loader {
    top: 4px;
}

.path > .item {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    display: inline-block;
    position: relative;
    border-radius: 3px;
    background-color: tagBG;
    padding: 0 8px;
    height: tagHeight;
    max-width: 200px;
    min-width: 32px;
    vertical-align: top;
    white-space: nowrap;
    cursor: pointer;
    color: textColor2;
    margin-left: 2px;
    margin-top: 2px;
}

.path > .item > * {
    display: inline-block;
    position: absolute;
}
.path > .item > img {
    margin-top: 5px;
}
.path > .item > img:first-child {
    left: 8px;
}
.path > .item > img:last-child {
    right: 8px;
}
.path > .item > div {
    left: 30px;
    right: 30px;
    overflow: hidden;
    vertical-align: top;
    margin-top: 6px;
}

.path {
    border: 1px solid buttonBorder;
    border-radius: 4px;
    background-color: #ffffff;
    height: 32px;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    position: relative;
    padding-right: 35px;
    overflow: hidden;
}

.path > .buttonSimple {
    position: absolute;
    right: -1px;
    top: -1px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.notifier {
    display: inline-block;
    background-color: stackPanelMarker1;
    border-radius: 12px;
    padding: 0 4px;
    color: white;
    font-size: 13px;
    font-family: DroidSans;
}

.slider {
    min-width: 100px;
    height: 6px;
    position: relative;
    background-color: buttonBG;
    border-radius: 3px;
}

.sliderLine {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    border-radius: 3px;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

.slider .sliderLine:first-child {
    background-color: progressOptional;
}

.slider .sliderLine + .sliderLine {
    background-color: progressNormal;
}
.slider.decline .sliderLine + .sliderLine {
    background-color: declineButtonBG2;
}


.sliderCircle {
    position: absolute;
    cursor:pointer;
}
.sliderCircle:before {
    position: absolute;
    content: " ";
    height: 0;
    width: 0;
    top: -6px;

    border: 9px solid white;
    border-radius: 9px;
}
.sliderCircle:after {
    position: absolute;
    content: " ";
    height: 0;
    width: 0;
    top: -4px;
    left: 2px;

    border: 7px solid progressNormal;
    border-radius: 7px;
}
.slider.decline .sliderCircle:after {
    border-color: declineButtonBG2;
}

.progressBar {
    position: relative;
    min-width: 102px;
    height: 20px;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    background-color: buttonBG;
    cursor: pointer;
    overflow: hidden;
    border: 1px solid border1;
    border-radius: 3px;
}

.progressBarLine {
    position: absolute;
    left: 0;
}
.progressBar .progressBarLine:first-child {
    background-color: progressOptional;
    bottom: 0;
    height: 50%;
    visibility: hidden;
}
.progressBar.split .progressBarLine:first-child {
    visibility: visible;
}

.progressBar .progressBarLine + .progressBarLine {
    background-color: progressNormal;
    top: 0;
    height: 100%;
}
.progressBar.decline .progressBarLine + .progressBarLine {
    background-color: declineButtonBG2;
}

.progressBar.split .progressBarLine + .progressBarLine {
    height: 50%;
}

.progressBar span {
    position: absolute;
    display: inline-block;
    text-align: center;
    left: 0;
    top: 2px;
    width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.filesPanel {
    position: relative;
    border: 1px solid buttonBorder;
}

.filesPanel .buttonSimple {
    position: absolute;
    border-radius: 0;
}
.filesPanel input + .buttonSimple {
    left: -1px;
    top: -1px;
    right: 30px;
}
.filesPanel .buttonSimple + .buttonSimple {
    right: -1px;
    top: -1px;
}

.file {
    white-space: nowrap;
    cursor: pointer;
    height: 19px;
}
.file > * {
    vertical-align: top;
}
.file img {
    margin-top: 1px;
    margin-right: 12px;
}
.file + .file {
    margin-top: 13px;
}

.file.selected span {
    position: relative;
}
@if user.agent gecko1_8 ie9 {
    .file.selected span {
        top: 0;
    }
}
@else {
    .file.selected span {
        top: -2px;
    }
}

.files {
    color: textColor1;
    padding: 16px;
}

@eval notificationOffset kz.arta.synergy.components.style.client.Constants.notificationOffset();
@eval notificationIconSize kz.arta.synergy.components.style.client.Constants.notificationIconSize();
.notification {
    position: relative;
    max-width: 400px;
    padding: notificationOffset;

    border: 1px solid buttonPressed;
    border-radius: 4px;
    color: stackPanelText2;
    box-shadow: 2px 2px 5px -1px rgba(0, 0, 0, 0.15);
    background-color: white;
}
.notification img {
    height: notificationIconSize;
    width: notificationIconSize;
    vertical-align: top;
}

.notification .notificationText {
    display: inline-block;
    max-width: 323px;
    margin-left: notificationOffset;
    vertical-align: top;
    word-wrap: break-word;
}
.notificationText ul {
    margin: 0;
    padding: 0;
    list-style-position: inside;
}
.notification span {
    word-wrap: break-word;
}

.notification.success {
    color: positiveColor;
}
.notification.warning {
    color: warningColor;
}
.notification.failure {
    color: negativeColor;
}
.notification .approveButton,
.notification .declineButton,
.notification .buttonSimple {
    min-width: 113px;
    width: 113px;
}

.notification .declineButton {
    margin-left: 10px;
}
.notification .buttonSimple {
    margin-left: 10px;
}

#circularG{
    position:relative;
    width:16px;
    height:16px
}

.circularG {
    position: absolute;
    background-color: #0070AD;
    width: 4px;
    height: 4px;
    -moz-border-radius: 2px;
    -moz-animation-name: bounce_circularG;
    -moz-animation-duration: 0.72s;
    -moz-animation-iteration-count: infinite;
    -moz-animation-direction: linear;
    -webkit-border-radius: 2px;
    -webkit-animation-name: bounce_circularG;
    -webkit-animation-duration: 0.72s;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-direction: linear;
    -ms-border-radius: 2px;
    -ms-animation-name: bounce_circularG;
    -ms-animation-duration: 0.72s;
    -ms-animation-iteration-count: infinite;
    -ms-animation-direction: linear;
    -o-border-radius: 2px;
    -o-animation-name: bounce_circularG;
    -o-animation-duration: 0.72s;
    -o-animation-iteration-count: infinite;
    -o-animation-direction: linear;
    border-radius: 2px;
    animation-name: bounce_circularG;
    animation-duration: 0.72s;
    animation-iteration-count: infinite;
    animation-direction: linear;
}

.dark .circularG{
    background-color: #e14d1f;
}

#circularG_1 {
    left: 0;
    top: 6px;
    -moz-animation-delay: 0.27s;
    -webkit-animation-delay: 0.27s;
    -ms-animation-delay: 0.27s;
    -o-animation-delay: 0.27s;
    animation-delay: 0.27s;
}

#circularG_2 {
    left: 2px;
    top: 2px;
    -moz-animation-delay: 0.36s;
    -webkit-animation-delay: 0.36s;
    -ms-animation-delay: 0.36s;
    -o-animation-delay: 0.36s;
    animation-delay: 0.36s;
}

#circularG_3 {
    top: 0;
    left: 6px;
    -moz-animation-delay: 0.45s;
    -webkit-animation-delay: 0.45s;
    -ms-animation-delay: 0.45s;
    -o-animation-delay: 0.45s;
    animation-delay: 0.45s;
}

#circularG_4 {
    right: 2px;
    top: 2px;
    -moz-animation-delay: 0.54s;
    -webkit-animation-delay: 0.54s;
    -ms-animation-delay: 0.54s;
    -o-animation-delay: 0.54s;
    animation-delay: 0.54s;
}

#circularG_5 {
    right: 0;
    top: 6px;
    -moz-animation-delay: 0.63s;
    -webkit-animation-delay: 0.63s;
    -ms-animation-delay: 0.63s;
    -o-animation-delay: 0.63s;
    animation-delay: 0.63s;
}

#circularG_6 {
    right: 2px;
    bottom: 2px;
    -moz-animation-delay: 0.72s;
    -webkit-animation-delay: 0.72s;
    -ms-animation-delay: 0.72s;
    -o-animation-delay: 0.72s;
    animation-delay: 0.72s;
}

#circularG_7 {
    left: 6px;
    bottom: 0;
    -moz-animation-delay: 0.81s;
    -webkit-animation-delay: 0.81s;
    -ms-animation-delay: 0.81s;
    -o-animation-delay: 0.81s;
    animation-delay: 0.81s;
}

#circularG_8 {
    left: 2px;
    bottom: 2px;
    -moz-animation-delay: 0.9s;
    -webkit-animation-delay: 0.9s;
    -ms-animation-delay: 0.9s;
    -o-animation-delay: 0.9s;
    animation-delay: 0.9s;
}

@-moz-keyframes bounce_circularG {
    0% {
        -moz-transform: scale(1)
    }

    100% {
        -moz-transform: scale(.3)
    }

}

@-webkit-keyframes bounce_circularG {
    0% {
        -webkit-transform: scale(1)
    }

    100% {
        -webkit-transform: scale(.3)
    }

}

@-ms-keyframes bounce_circularG {
    0% {
        -ms-transform: scale(1)
    }

    100% {
        -ms-transform: scale(.3)
    }

}

@-o-keyframes bounce_circularG {
    0% {
        -o-transform: scale(1)
    }

    100% {
        -o-transform: scale(.3)
    }

}

@keyframes bounce_circularG {
    0% {
        transform: scale(1)
    }

    100% {
        transform: scale(.3)
    }

}

.glass {
    z-index: 1500;
    background-color: #000000;
    opacity: 0.3;
}