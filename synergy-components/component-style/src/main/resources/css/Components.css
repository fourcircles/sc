@font-face {
    font-family: 'DroidSansBold';
    src: url('droid/bold/DroidSans-Bold-webfont.eot');
    src: local('Droid Sans Bold'),
    url('droid/bold/DroidSans-Bold.ttf') format('truetype'),
    url('droid/bold/DroidSans-Bold-webfont.eot?#iefix') format('embedded-opentype'),
    url('droid/bold/DroidSans-Bold-webfont.woff') format('woff'),
    url('droid/bold/DroidSans-Bold-webfont.svg#DroidSansBold') format('svg');
    font-weight: normal;
    font-style: normal;

}

@font-face {
    font-family: 'DroidSans';
    src: url('droid/regular/DroidSans-webfont.eot');
    src: local('Droid Sans'),
    url('droid/regular/DroidSans.ttf') format('truetype'),
    url('droid/regular/DroidSans-webfont.eot?#iefix') format('embedded-opentype'),
    url('droid/regular/DroidSans-webfont.woff') format('woff'),
    url('droid/regular/DroidSans-webfont.svg#DroidSans') format('svg');
    font-weight: normal;
    font-style: normal;
}
@def calendarDays #9b9b9b;
@def calendarOver #e5e5e5;
@def black #000000;

@eval whiteBG kz.arta.synergy.components.style.client.Colors.whiteBG().hex();
@eval whiteBG_0 kz.arta.synergy.components.style.client.Colors.whiteBG().alpha0();
@eval whiteBG_0_ie kz.arta.synergy.components.style.client.Colors.whiteBG().alpha0IE();

@def buttonBorder #e2e2e2;

@eval buttonBG kz.arta.synergy.components.style.client.Colors.buttonBG().hex();
@eval buttonBG_0 kz.arta.synergy.components.style.client.Colors.buttonBG().alpha0();
@eval buttonBG_0_ie kz.arta.synergy.components.style.client.Colors.buttonBG().alpha0IE();

@def textColor1 #757575;
@def textColor2 #606060;
@def textColor3 #404040;

@eval border1 kz.arta.synergy.components.style.client.Colors.border1().hex();

@eval mainBG kz.arta.synergy.components.style.client.Colors.mainBG().hex();
@eval mainBG_0 kz.arta.synergy.components.style.client.Colors.mainBG().alpha0();
@eval mainBG_0_ie kz.arta.synergy.components.style.client.Colors.mainBG().alpha0IE();

@def buttonPressed #d6d6d6;

@def approveButtonBG1 #93c5ae;

@eval approveButtonBG2 kz.arta.synergy.components.style.client.Colors.approveButtonBG2().hex();
@eval approveButtonBG2_0 kz.arta.synergy.components.style.client.Colors.approveButtonBG2().alpha0();
@eval approveButtonBG2_0_ie kz.arta.synergy.components.style.client.Colors.approveButtonBG2().alpha0IE();

@eval approveButtonBG3 kz.arta.synergy.components.style.client.Colors.approveButtonBG3().hex();
@eval approveButtonBG3_0 kz.arta.synergy.components.style.client.Colors.approveButtonBG3().alpha0();
@eval approveButtonBG3_0_ie kz.arta.synergy.components.style.client.Colors.approveButtonBG3().alpha0IE();

@eval approveButtonBG4 kz.arta.synergy.components.style.client.Colors.approveButtonBG4().hex();
@eval approveButtonBG4_0 kz.arta.synergy.components.style.client.Colors.approveButtonBG4().alpha0();
@eval approveButtonBG4_0_ie kz.arta.synergy.components.style.client.Colors.approveButtonBG4().alpha0IE();
@def approveButtonBG5 #239260;

@def declineButtonBG1 #ecacad;

@eval declineButtonBG2 kz.arta.synergy.components.style.client.Colors.declineButtonBG2().hex();
@eval declineButtonBG2_0 kz.arta.synergy.components.style.client.Colors.declineButtonBG2().alpha0();
@eval declineButtonBG2_0_ie kz.arta.synergy.components.style.client.Colors.declineButtonBG2().alpha0IE();

@eval declineButtonBG3 kz.arta.synergy.components.style.client.Colors.declineButtonBG3().hex();
@eval declineButtonBG3_0 kz.arta.synergy.components.style.client.Colors.declineButtonBG3().alpha0();
@eval declineButtonBG3_0_ie kz.arta.synergy.components.style.client.Colors.declineButtonBG3().alpha0IE();

@eval declineButtonBG4 kz.arta.synergy.components.style.client.Colors.declineButtonBG4().hex();
@eval declineButtonBG4_0 kz.arta.synergy.components.style.client.Colors.declineButtonBG4().alpha0();
@eval declineButtonBG4_0_ie kz.arta.synergy.components.style.client.Colors.declineButtonBG4().alpha0IE();

@def stackPanelText2 #808080;
@def selectColor #deefff;

@eval tabBg2 kz.arta.synergy.components.style.client.Colors.tabBG2().hex();
@eval tabBg2_0 kz.arta.synergy.components.style.client.Colors.tabBG2().alpha0();
@eval tabBg2_0_ie kz.arta.synergy.components.style.client.Colors.tabBG2().alpha0IE();

@eval tagBG kz.arta.synergy.components.style.client.Colors.tagBG().hex();
@eval tagBG_0 kz.arta.synergy.components.style.client.Colors.tagBG().alpha0();
@eval tagBG_0_ie kz.arta.synergy.components.style.client.Colors.tagBG().alpha0IE();

/* переписывает direction даже если не подгружается standard_rtl.css */
*[dir="rtl"] {
    direction: rtl;
}

@eval buttonHeight kz.arta.synergy.components.style.client.Constants.buttonHeight();
@eval buttonMinWidth kz.arta.synergy.components.style.client.Constants.buttonMinWidth();
@eval borderWidth kz.arta.synergy.components.style.client.Constants.borderWidth();
@eval borderRadius kz.arta.synergy.components.style.client.Constants.borderRadius();

@def navigatorBG #292f3b;
@def stackPanelBG #f1f1f1;
@def panelBG #f8f8f8;

@def tableString2 #fbfbfb;

#titlePanel {
    line-height: 54px;
    padding-left: 20px;
    padding-right: 5px;
    border-bottom: 1px solid buttonPressed;
}
#titlePanel > span {
    color: textColor2;
}

#titlePanel > .buttonSimple, #titlePanel > .comboBox {
    margin-top: 11px;
}
#titlePanel > .comboBox {
    margin-right: 20px;
}

/*Это не работает для ie9 - пока там выделяется все*/
.unselectable {
    -moz-user-select: -moz-none;
    -khtml-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.buttonSimple, .approveButton, .declineButton, .dropDownButton {
    height: buttonHeight;
    line-height: buttonHeight;
    min-width: buttonMinWidth;
    border: borderWidth solid;
    border-radius: borderRadius;
    overflow: hidden;
    cursor: default;
    text-align: center;

    white-space: nowrap;
    display: inline-block;
}

.buttonSimple.edge, .approveButton.edge, .declineButton.edge {
    border-radius: 0;
}

.buttonSimple.left, .approveButton.left, .declineButton.left {
    border-radius: borderRadius 0 0 borderRadius;
}


.buttonSimple.right, .approveButton.right, .declineButton.right {
    border-radius: 0 borderRadius borderRadius 0;
}

.buttonSimple {
    background-color: whiteBG;
    border-color: buttonBorder;
    color: textColor2;
}

.buttonText {
    vertical-align: top;
    white-space:nowrap;
    text-align: center;
    margin-left: 10px;
    margin-right: 10px;
}

@eval gradientTopMargin kz.arta.synergy.components.style.client.Constants.gradientTopMargin();
.gradient {
    max-width: 20px;
    width: 20%;
    height: buttonHeight;
    float: right;
    bottom: buttonHeight;
    position: relative;
}

.buttonSimple .gradient {
    background: -moz-linear-gradient(left, whiteBG_0 0%, whiteBG 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,whiteBG_0), color-stop(100%,whiteBG));
    background: -webkit-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: -o-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: -ms-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: linear-gradient(to right, whiteBG_0 0%,whiteBG 100%);

    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")whiteBG_0_ie literal("endColorstr=")whiteBG literal(",GradientType=1 )");
}

*[dir="rtl"] .buttonSimple .gradient {
    background: -moz-linear-gradient(left, whiteBG 0%, whiteBG_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,whiteBG), color-stop(100%,whiteBG_0));
    background: -webkit-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: -o-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: -ms-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: linear-gradient(to right, whiteBG 0%,whiteBG_0 100%);
}

.pressed.buttonSimple .gradient{
    background: -moz-linear-gradient(left, buttonBG_0 0%, buttonBG 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,buttonBG_0), color-stop(100%,buttonBG));
    background: -webkit-linear-gradient(left, buttonBG_0 0%,buttonBG 100%);
    background: -o-linear-gradient(left, buttonBG_0 0%,buttonBG 100%);
    background: -ms-linear-gradient(left, buttonBG_0 0%,buttonBG 100%);
    background: linear-gradient(to right, buttonBG_0 0%,buttonBG 100%);

    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")buttonBG_0_ie literal("endColorstr=")buttonBG literal(",GradientType=1 )");
}

*[dir="rtl"] .pressed.buttonSimple .gradient{
    background: -moz-linear-gradient(left, buttonBG 0%, buttonBG_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,buttonBG), color-stop(100%,buttonBG_0));
    background: -webkit-linear-gradient(left, buttonBG 0%,buttonBG_0 100%);
    background: -o-linear-gradient(left, buttonBG 0%,buttonBG_0 100%);
    background: -ms-linear-gradient(left, buttonBG 0%,buttonBG_0 100%);
    background: linear-gradient(to right, buttonBG 0%,buttonBG_0 100%);

    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")buttonBG literal("endColorstr=")buttonBG_0_ie literal(",GradientType=1 )");
}

.approveButton .gradient{
    background: -moz-linear-gradient(left, approveButtonBG3_0 0%, approveButtonBG3 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG3_0), color-stop(100%,approveButtonBG3));
    background: -webkit-linear-gradient(left, approveButtonBG3_0 0%,approveButtonBG3 100%);
    background: -o-linear-gradient(left, approveButtonBG3_0 0%,approveButtonBG3 100%);
    background: -ms-linear-gradient(left, approveButtonBG3_0 0%,approveButtonBG3 100%);
    background: linear-gradient(to right, approveButtonBG3_0 0%,approveButtonBG3 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")approveButtonBG3_0_ie literal("endColorstr=")approveButtonBG3 literal(",GradientType=1 )");
}

*[dir="rtl"] .approveButton .gradient{
    background: -moz-linear-gradient(left, approveButtonBG3 0%, approveButtonBG3_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG3), color-stop(100%,approveButtonBG3_0));
    background: -webkit-linear-gradient(left, approveButtonBG3 0%,approveButtonBG3_0 100%);
    background: -o-linear-gradient(left, approveButtonBG3 0%,approveButtonBG3_0 100%);
    background: -ms-linear-gradient(left, approveButtonBG3 0%,approveButtonBG3_0 100%);
    background: linear-gradient(to right, approveButtonBG3 0%,approveButtonBG3_0 100%);
}

.approveButton:hover .gradient{
    background: -moz-linear-gradient(left, approveButtonBG2_0 0%, approveButtonBG2 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG2_0), color-stop(100%,approveButtonBG2));
    background: -webkit-linear-gradient(left, approveButtonBG2_0 0%,approveButtonBG2 100%);
    background: -o-linear-gradient(left, approveButtonBG2_0 0%,approveButtonBG2 100%);
    background: -ms-linear-gradient(left, approveButtonBG2_0 0%,approveButtonBG2 100%);
    background: linear-gradient(to right, approveButtonBG2_0 0%,approveButtonBG2 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")approveButtonBG2_0_ie literal("endColorstr=")approveButtonBG2 literal(",GradientType=1 )");
}

*[dir="rtl"] .approveButton:hover .gradient{
    background: -moz-linear-gradient(left, approveButtonBG2 0%, approveButtonBG2_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG2), color-stop(100%,approveButtonBG2_0));
    background: -webkit-linear-gradient(left, approveButtonBG2 0%,approveButtonBG2_0 100%);
    background: -o-linear-gradient(left, approveButtonBG2 0%,approveButtonBG2_0 100%);
    background: -ms-linear-gradient(left, approveButtonBG2 0%,approveButtonBG2_0 100%);
    background: linear-gradient(to right, approveButtonBG2 0%,approveButtonBG2_0 100%);
}


.approveButton.pressed .gradient{
    background: -moz-linear-gradient(left, approveButtonBG4_0 0%, approveButtonBG4 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG4_0), color-stop(100%,approveButtonBG4));
    background: -webkit-linear-gradient(left, approveButtonBG4_0 0%,approveButtonBG4 100%);
    background: -o-linear-gradient(left, approveButtonBG4_0 0%,approveButtonBG4 100%);
    background: -ms-linear-gradient(left, approveButtonBG4_0 0%,approveButtonBG4 100%);
    background: linear-gradient(to right, approveButtonBG4_0 0%,approveButtonBG4 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")approveButtonBG4_0_ie literal("endColorstr=")approveButtonBG4 literal(",GradientType=1 )");
}

*[dir="rtl"] .approveButton.pressed .gradient{
    background: -moz-linear-gradient(left, approveButtonBG4 0%, approveButtonBG4_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,approveButtonBG4), color-stop(100%,approveButtonBG4_0));
    background: -webkit-linear-gradient(left, approveButtonBG4 0%,approveButtonBG4_0 100%);
    background: -o-linear-gradient(left, approveButtonBG4 0%,approveButtonBG4_0 100%);
    background: -ms-linear-gradient(left, approveButtonBG4 0%,approveButtonBG4_0 100%);
    background: linear-gradient(to right, approveButtonBG4 0%,approveButtonBG4_0 100%);
}


.declineButton .gradient {
    background: -moz-linear-gradient(left, declineButtonBG3_0 0%, declineButtonBG3 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG3_0), color-stop(100%,declineButtonBG3));
    background: -webkit-linear-gradient(left, declineButtonBG3_0 0%,declineButtonBG3 100%);
    background: -o-linear-gradient(left, declineButtonBG3_0 0%,declineButtonBG3 100%);
    background: -ms-linear-gradient(left, declineButtonBG3_0 0%,declineButtonBG3 100%);
    background: linear-gradient(to right, declineButtonBG3_0 0%,declineButtonBG3 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")declineButtonBG3_0_ie literal("endColorstr=")declineButtonBG3 literal(",GradientType=1 )");
}

*[dir="rtl"] .declineButton .gradient{
    background: -moz-linear-gradient(left, declineButtonBG3 0%, declineButtonBG3_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG3), color-stop(100%,declineButtonBG3_0));
    background: -webkit-linear-gradient(left, declineButtonBG3 0%,declineButtonBG3_0 100%);
    background: -o-linear-gradient(left, declineButtonBG3 0%,declineButtonBG3_0 100%);
    background: -ms-linear-gradient(left, declineButtonBG3 0%,declineButtonBG3_0 100%);
    background: linear-gradient(to right, declineButtonBG3 0%,declineButtonBG3_0 100%);
}

.declineButton:hover .gradient{
    background: -moz-linear-gradient(left, declineButtonBG2_0 0%, declineButtonBG2 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG2_0), color-stop(100%,declineButtonBG2));
    background: -webkit-linear-gradient(left, declineButtonBG2_0 0%,declineButtonBG2 100%);
    background: -o-linear-gradient(left, declineButtonBG2_0 0%,declineButtonBG2 100%);
    background: -ms-linear-gradient(left, declineButtonBG2_0 0%,declineButtonBG2 100%);
    background: linear-gradient(to right, declineButtonBG2_0 0%,declineButtonBG2 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")declineButtonBG2_0_ie literal("endColorstr=")declineButtonBG2 literal(",GradientType=1 )");
}

*[dir="rtl"] .declineButton:hover .gradient{
    background: -moz-linear-gradient(left, declineButtonBG2 0%, declineButtonBG2_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG2), color-stop(100%,declineButtonBG2_0));
    background: -webkit-linear-gradient(left, declineButtonBG2 0%,declineButtonBG2_0 100%);
    background: -o-linear-gradient(left, declineButtonBG2 0%,declineButtonBG2_0 100%);
    background: -ms-linear-gradient(left, declineButtonBG2 0%,declineButtonBG2_0 100%);
    background: linear-gradient(to right, declineButtonBG2 0%,declineButtonBG2_0 100%);
}

.pressed.declineButton .gradient{
    background: -moz-linear-gradient(left, declineButtonBG4_0 0%, declineButtonBG4 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG4_0), color-stop(100%,declineButtonBG4));
    background: -webkit-linear-gradient(left, declineButtonBG4_0 0%,declineButtonBG4 100%);
    background: -o-linear-gradient(left, declineButtonBG4_0 0%,declineButtonBG4 100%);
    background: -ms-linear-gradient(left, declineButtonBG4_0 0%,declineButtonBG4 100%);
    background: linear-gradient(to right, declineButtonBG4_0 0%,declineButtonBG4 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")declineButtonBG4_0_ie literal("endColorstr=")declineButtonBG4 literal(",GradientType=1 )");
}

*[dir="rtl"] .declineButton.pressed .gradient{
    background: -moz-linear-gradient(left, declineButtonBG4 0%, declineButtonBG4_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,declineButtonBG4), color-stop(100%,declineButtonBG4_0));
    background: -webkit-linear-gradient(left, declineButtonBG4 0%,declineButtonBG4_0 100%);
    background: -o-linear-gradient(left, declineButtonBG4 0%,declineButtonBG4_0 100%);
    background: -ms-linear-gradient(left, declineButtonBG4 0%,declineButtonBG4_0 100%);
    background: linear-gradient(to right, declineButtonBG4 0%,declineButtonBG4_0 100%);
}

.dialogTitle .gradient{
    background: -moz-linear-gradient(left, mainBG_0 0%, mainBG 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,mainBG_0), color-stop(100%,mainBG));
    background: -webkit-linear-gradient(left, mainBG_0 0%,mainBG 100%);
    background: -o-linear-gradient(left, mainBG_0 0%,mainBG 100%);
    background: -ms-linear-gradient(left, mainBG_0 0%,mainBG 100%);
    background: linear-gradient(to right, mainBG_0 0%,mainBG 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")mainBG_0_ie literal("endColorstr=")mainBG literal(",GradientType=1 )");
    
    height: dialogTitleHeight;
    bottom: dialogTitleHeight;
}

*[dir="rtl"] .dialogTitle .gradient{
    background: -moz-linear-gradient(left, mainBG 0%, mainBG_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,mainBG), color-stop(100%,mainBG_0));
    background: -webkit-linear-gradient(left, mainBG 0%,mainBG_0 100%);
    background: -o-linear-gradient(left, mainBG 0%,mainBG_0 100%);
    background: -ms-linear-gradient(left, mainBG 0%,mainBG_0 100%);
    background: linear-gradient(to right, mainBG 0%,mainBG_0 100%);
}


.buttonSimple:hover {
    background-color: whiteBG;
    border-color: border1;
    color: textColor3;
}

.buttonSimple.disabled {
    background-color: whiteBG;
    border-color: buttonBorder;
    color: border1;
}

/*без фона ie странно применяет фильтр прозрачности*/
@if user.agent ie9 {
    .buttonSimple.disabled img {
        background-color: whiteBG;
    }
}

.buttonSimple.pressed {
    background-color: buttonBG;
    border-color: border1;
    color: textColor3;
}

@eval approveButtonMinWidth kz.arta.synergy.components.style.client.Constants.buttonApproveMinWidth();
.approveButton {
    background-color: approveButtonBG3;
    border-color: approveButtonBG3;
    color: whiteBG;
    min-width: approveButtonMinWidth;
}

.approveButton:hover {
    background-color: approveButtonBG2;
    border-color: approveButtonBG2;
    color: whiteBG;
}

.approveButton.pressed {
    background-color: approveButtonBG4;
    border-color: approveButtonBG4;
    color: whiteBG;
}

.approveButton.disabled {
    background-color: approveButtonBG1;
    border-color: approveButtonBG1;
    color: whiteBG;
}


.declineButton {
    background-color: declineButtonBG3;
    border-color: declineButtonBG3;
    color: whiteBG;
    min-width: approveButtonMinWidth;
}

.declineButton:hover {
    background-color: declineButtonBG2;
    border-color: declineButtonBG2;
    color: whiteBG;
}

.declineButton.disabled {
    background-color: declineButtonBG1;
    border-color: declineButtonBG1;
    color: whiteBG;
}

.declineButton.pressed {
    background-color: declineButtonBG4;
    border-color: declineButtonBG4;
    color: whiteBG;
}


.mainTextBold {
    font-family: DroidSansBold;
    font-size:14px;
}

.mainText {
    font-family: DroidSans;
    font-size:14px;
}

.bigText {
    font-family: DroidSansBold;
    font-size:16px;
}

.indicatorNumber {
    font-family: DroidSans;
    font-size:13px;
}

@eval dialogTitleHeight kz.arta.synergy.components.style.client.Constants.dialogTitleHeight();

.dialogTitle {
    background: mainBG;
    height: dialogTitleHeight;
    line-height: dialogTitleHeight;
}

@eval dialogTitleLeftMargin kz.arta.synergy.components.style.client.Constants.dialogTitleLeftMargin();
@eval dialogTitleLabelRightPadding kz.arta.synergy.components.style.client.Constants.dialogTitleLabelRightPadding();

.dialogTitleLabel {
    font-family: DroidSansBold;
    font-size:16px;
    margin-left: dialogTitleLeftMargin;
    margin-right: dialogTitleLabelRightPadding;
    vertical-align: middle;
    color: whiteBG;
    height: dialogTitleHeight;

    vertical-align: top;

    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    cursor: default;

    white-space: nowrap;
}

@eval dialogBorderWidth kz.arta.synergy.components.style.client.Constants.dialogBorderWidth();
@eval dialogMinWidth kz.arta.synergy.components.style.client.Constants.dialogMinWidth();

.dialog {
    box-sizing: border-box;
    -moz-box-sizing: border-box;

    min-width: dialogMinWidth;
    min-height: 84px;

    background: whiteBG;
    border: dialogBorderWidth solid border1;
}

@eval dialogCloseButtonPadding kz.arta.synergy.components.style.client.Constants.dialogCloseButtonPadding();
@eval dialogCloseButtonRightMargin kz.arta.synergy.components.style.client.Constants.dialogCloseButtonRightMargin();
.dialogTitleButton {
    padding: dialogCloseButtonPadding;
    margin-top: 8px;
    float: right;
    background-repeat: no-repeat;
    margin-right: dialogCloseButtonRightMargin;
}
.dialogTitleButton:last-child{
    margin-right: 0px;
}

@eval dialogContentPadding kz.arta.synergy.components.style.client.Constants.dialogContentPadding();
.dialogContent {
    padding: dialogContentPadding;
}

.dialogWithButtons .dialogContent {
    padding-bottom: 0px;
}

.popupPanel {
    padding : 0px;
}

@eval dialogButtonVMargin kz.arta.synergy.components.style.client.Constants.dialogNavigationButtonVMargin();
.dialogButton {
    margin-top: dialogButtonVMargin;
    margin-bottom: dialogButtonVMargin;
    display: inline-block;
}

@eval dialogButtonMargin kz.arta.synergy.components.style.client.Constants.dialogNavigationButtonMargin();
.dialogBackButton {
    margin-left: dialogButtonMargin;
}
.dialogMoreButton {
    margin-right: dialogButtonMargin;
}

.dropDownButton {
    border: borderWidth solid buttonBorder;
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
    background-color: buttonBG;

    position: relative;
    top: -1px;
    right: -1px;
}
.dropDownButton:hover {
    border-color: border1;
}
.dropDownButton:active {
    background-color: buttonPressed;
    border-color: border1;
}
.disabled .dropDownButton {
    background-color: whiteBG;
}

.approveButton .dropDownButton {
    background-color: approveButtonBG4;
    border-color: approveButtonBG4;
}
.approveButton .dropDownButton:active {
    background-color: approveButtonBG5;
}
.approveButton.disabled .dropDownButton {
    background-color: approveButtonBG1;
}

.contextMenuItem {
    display: block;
    border: 0px;
    padding-left: 10px;
    padding-right: 10px;
    height: 32px;
    line-height: 32px;
    overflow: hidden;
    white-space: nowrap;

    margin-bottom: 2px;
}
.contextMenuItem img {
    margin-right: 10px;
}
.contextMenuItem > * {
    vertical-align: middle;
}

.contextMenuItem:last-child {
    margin-bottom: 0px;
}
/* у элементов меню начиная со второго есть отступ вверху*/
/*.contextMenuItem + .contextMenuItem {*/
    /*margin-top: 2px;*/
/*}*/

/*здесь не используется :hover из-за возможности выделения клавиатурой*/
.contextMenuItem.over, .contextMenuItem.over.selected {
    background-color: #D5D8DA;
}

.contextMenuItem.selected {
    background-color: selectColor;
}

.green .contextMenuItem.over{
    background-color: approveButtonBG2;
}

.contextMenu {
    font-family: DroidSans;
    font-size: 14px;

    min-width: 100px;
    min-height: 32px;
    border: borderWidth solid buttonBorder;
    background-color: whiteBG;
    color: stackPanelText2;
    vertical-align: middle;
    margin-right: 0px;
    z-index: 10000;
}

.contextMenu.green {
    background-color: approveButtonBG4;
    color: whiteBG;
    border-color: approveButtonBG4;
}

.menuSeparator {
    background-color: tabBg2;
    height : 1px;
    margin-left: 10px;
    margin-right: 10px;
}

.green .menuSeparator {
    background-color: approveButtonBG3;
}


@eval commonInputPadding kz.arta.synergy.components.style.client.Constants.commonInputPadding();
.commonInput, .artaText {
    border-color: buttonBorder;
    border-width: borderWidth;
    border-style: solid;
    border-radius: borderRadius;
    background-color: whiteBG;
    color: textColor2;
    padding: commonInputPadding;
    vertical-align: top;
    outline: none;
    margin: 0px;
}

.artaText {
    border: none;
    overflow: hidden;
    width: 100%;
    -moz-box-sizing:    border-box;
    -webkit-box-sizing: border-box;
    box-sizing:        border-box;
}

.artaTextPanel {
    border-color: buttonBorder;
    border-width: 1px;
    border-style: solid;
    border-radius: borderRadius;
    background-color: whiteBG;
    display: inline-block;
    vertical-align: top;
    padding: commonInputPadding;
}

.commonInput {
    height: 30px;
    padding: 0 8px;
}

.commonInput.disabled, .artaText.disabled, .artaTextPanel.disabled {
    background-color: buttonBG;
    color: border1;
}

.commonInput:focus, .artaText:focus, .artaTextPanel.focus {
    border-color: border1;
    color: textColor2;
}

/*убираем крестик удаления в поле ввода, который отображают ie10-11*/
*::-ms-clear {
    display: none;
    width: 0;
    height: 0;
}

.commonInput.invalid, .artaText.invalid, .artaTextPanel.invalid {
    border-color: declineButtonBG1;
    color: textColor2;
}

.commonInput.placeHolder, .artaText.placeHolder{
    color: border1;
}


@eval comboMinWidth kz.arta.synergy.components.style.client.Constants.comboMinWidth();
@eval dateInputWidth kz.arta.synergy.components.style.client.Constants.dateInputWidth();
.comboBox, .dateInput {
    min-width: comboMinWidth;
    text-align: left;
    height: 30px;
    line-height: 30px;
    border: solid borderWidth buttonPressed;
    border-radius: borderRadius;

    display:inline-block;
}

.dateInput {
    min-width: 0;
    vertical-align: top;
}

.dateInput.invalid {
    border: solid borderWidth declineButtonBG1;
}

.dateInput.invalid .buttonSimple{
    border-top-color: declineButtonBG1;
    border-bottom-color: declineButtonBG1;
    border-right-color: declineButtonBG1;
}

.dateInput.focus {
    border: solid borderWidth border1;
}

.dateInput.focus .buttonSimple{
    border-top-color: border1;
    border-bottom-color: border1;
    border-right-color: border1;
}

.comboBox .buttonSimple, .dateInput .buttonSimple{
    margin-top: -1px;
    margin-right: -1px;

    border-bottom-left-radius: 0px;
    border-top-left-radius: 0px;
    border: borderWidth solid buttonPressed;
    background-color: buttonBG;

    display: inline-block;
    float: right;
}
.comboBox.focus, .comboBox.focus .buttonSimple{
    border-color: border1;
}

.comboBox .buttonSimple:hover, .dateInput .buttonSimple:hover{
    border-color: border1;

}

.comboBox.pressed .buttonSimple {
    border-color: border1;
    background-color: buttonPressed;
}

.comboBox .buttonSimple.pressed, .dateInput .buttonSimple.pressed{
    border-color: border1;
    background-color: buttonPressed;
}

.comboBox .commonInput, .dateInput .commonInput{
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
    border: 0px;
    margin: 0px;
}

.comboBox.disabled .commonInput, .dateInput.disabled .commonInput{
    background-color: buttonBG;
    color: border1;
}

.comboBox.disabled .buttonSimple, .dateInput.disabled .buttonSimple{
    border-color: buttonPressed;
    background-color: buttonBG;
}

@if user.agent ie9 {
    .dateInput.disabled .buttonSimple img {
        background-color: buttonBG;
    }
}

.vscroll {
    width: 17px;
    height: 200px;
    background-color: buttonBG;
}

.vscroll img {
    width: 17px;
    height: 18px;
    display: block;
    background-color: buttonBG;
}

.vscroll .scrollbar {
    width: 17px;
    background-color: buttonBorder;
    display: block;
    cursor: default;
}

.vscroll .scrollbar.pressed {
    background-color: buttonPressed;
}

.hscroll {
    width: 200px;
    height: 17px;
    background-color: buttonBG;
    display: inline-block;
}

.hscroll img {
    width: 18px;
    height: 17px;
    display: inline-block;
    background-color: buttonBG;
}

.hscroll .scrollbar {
    height: 17px;
    background-color: buttonBorder;
    display: inline-block;
    cursor: default;
}

.hscroll .scrollbar.pressed {
    background-color: buttonPressed;
}

.groupButtonPanel {
    display: inline-block;
    height: 32px;
    vertical-align: top;
}

.tagInput {
    position:relative;
    border-radius: borderRadius;
    border: 1px buttonBorder solid;
    height: 30px;
    vertical-align: top;
    overflow : visible;
    line-height: 0;
}
.tagInput.focus, .tagInput.focus .buttonSimple {
    border-color: border1;
}

.tagInput .commonInput{
    border-width: 0px;
    padding: 0 0 0 1px;
    width: 100%;
}

.tagInput .buttonSimple {
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
    position: absolute;
    top: -1px;
    right: -1px;
}

.tagInput .buttonSimple.disabled,
.tagInput.disabled,
.tagInput .buttonSimple.disabled img {
    background-color: buttonBG;
}

.tagInput .tag {
    margin-left: 2px;
}

.tagInput.disabled .tag {
    opacity: 0.5;
    filter: literal("alpha(opacity=50)");
}

@eval tagHeight kz.arta.synergy.components.style.client.Constants.tagHeight();
@eval tagMaxWidth kz.arta.synergy.components.style.client.Constants.tagMaxWidth();

.tag {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    display: inline-block;
    position: relative;
    border-radius: 3px;
    background-color: tagBG;
    padding: 0 8px;
    height: tagHeight;
    line-height: 26px;
    max-width: tagMaxWidth;
    vertical-align: top;
    white-space: nowrap;
}

.tag .gradient {
    background: -moz-linear-gradient(left, tagBG_0 0%, tagBG 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,tagBG_0), color-stop(100%,tagBG));
    background: -webkit-linear-gradient(left, tagBG_0 0%,tagBG 100%);
    background: -o-linear-gradient(left, tagBG_0 0%,tagBG 100%);
    background: -ms-linear-gradient(left, tagBG_0 0%,tagBG 100%);
    background: linear-gradient(to right, tagBG_0 0%,tagBG 100%);
    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")tagBG_0_ie literal("endColorstr=")tagBG literal(",GradientType=1 )");
}

*[dir="rtl"] .tag .gradient{
    background: -moz-linear-gradient(left, tagBG 0%, tagBG_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,tagBG), color-stop(100%,tagBG_0));
    background: -webkit-linear-gradient(left, tagBG 0%,tagBG_0 100%);
    background: -o-linear-gradient(left, tagBG 0%,tagBG_0 100%);
    background: -ms-linear-gradient(left, tagBG 0%,tagBG_0 100%);
    background: linear-gradient(to right, tagBG 0%,tagBG_0 100%);
}

.tag ::selection {
    background-color: selectColor;
}

.tag > div {
    display: inline-block;
}

.tag img {
    vertical-align: top;
    margin-left: 8px;
    margin-top: 5px;
    cursor: pointer;
}

.disabled .tag img {
    cursor: auto;
}

@eval tagIndicatorPadding kz.arta.synergy.components.style.client.Constants.tagIndicatorPadding();
.tagIndicatorContent {
    padding: tagIndicatorPadding;
}
/*предотвращение collapse'а родителя т.к. внутри только floats*/
.tagIndicatorContent:after {
    content: " ";
    display: block;
    height: 0;
    clear: both;
}
@eval tagInterval kz.arta.synergy.components.style.client.Constants.tagInterval();
.tagIndicatorContent .tag {
    margin-bottom: tagInterval;
    /*это небольшой хак, чтобы inline-block отображались на новой строке*/
    float:left;
    clear:left;
    max-width: 200px;
}
.tagIndicatorContent .tag:last-child {
    margin-bottom: 0px;
}

.tagIndicator {
    margin-top: 10px;
    position: relative;
    background: white;
    border: 1px solid buttonBorder;
    display: inline-block;
    line-height: 2px;
}
.tagIndicator:after, .tagIndicator:before {
    bottom: 100%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
}

.tagIndicator:after {
    border-color: rgba(0, 0, 0, 0);
    border-bottom-color: whiteBG;
    border-width: 10px;
    border-left-width: 5px;
    border-right-width: 5px;
}
.tagIndicator:before {
    border-color: rgba(226, 226, 226, 0);
    border-bottom-color: #e2e2e2;
    border-width: 11px;
    border-left-width: 6px;
    border-right-width: 6px;
    margin-left: -1px;
}
.tagIndicator.leftIndicator:before, .tagIndicator.leftIndicator:after {
    left: 17px;
}
.tagIndicator.rightIndicator:before, .tagIndicator.rightIndicator:after {
    right: 17px;
}
.tagIndicator.centerIndicator:before, .tagIndicator.centerIndicator:after {
    left: 46%;
}

p {
    margin: 0px;
}

.datePicker {
    width: 293px; /* -2 для границ */
    border-color: buttonBorder;
    border-width: 1px;
    border-style: solid;
    text-align: center;
}

.datePickerCalendar {
    margin-bottom: 20px;
}

.datePickerTop {
    line-height: 16px;
    margin: 0 15px;
}
.datePickerTop:first-child {
    margin-top: 15px;
}
.datePickerTop:last-child {
    margin-bottom: 15px;
}
.datePickerTop img {
    cursor: pointer;
}
.datePickerTop img:first-child {
    float: left;
}
.datePickerTop img:last-child {
    float: right;
}

.datePickerTop span {
    color: textColor2;
}

.dayWeekPanel {
    padding-top: 26px;
    padding-bottom: 12px;
    line-height: 17px;
}

.dayWeekPanel span {
    display: inline-block;
    padding-right: 21px;
    color: declineButtonBG4;
    width: 16px;
}

.dayWeekPanel span:last-child {
    padding-right: 0;
}

.daysPanel {
    line-height: 14px;
}

.daysPanel span {
    display: inline-block;
    padding-right: 10.5px;
    padding-left: 10.5px;
    padding-bottom: 6px;
    padding-top: 6px;
    width: 16px;
}

.daysPanel span:last-child {
    margin-right: 0;
}

.daysPanel:last-child {
    margin-bottom: 20px;
}

.month, .thisMonth, .outMonth {
    cursor: pointer;
}

.month {
    color: calendarDays;
}

.thisMonth {
    color: black;
}

.outMonth {
    color: buttonPressed;
}

.month.over,  .thisMonth.over, .outMonth.over{
    background-color: calendarOver;
}

.month.pressed,  .thisMonth.pressed, .outMonth.pressed {
    background-color: selectColor;
}

.calendarPopup {
    padding: 0;
    border-width: 0;
    z-index: 10000;
    background-color: whiteBG;
}

.dateTimeInput {
    display: inline-block;
    vertical-align: top;
}

.searchResult {
    position:relative;
    border-radius: borderRadius;
    border: 1px buttonBorder solid;
    overflow: hidden;
    display: inline-block;
    white-space: nowrap;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
}

.searchResult .buttonSimple {
    border-width: 0px;
    vertical-align: top;
    cursor: pointer;
}
.searchResult.disabled .buttonSimple {
    cursor: default;
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
}

.searchResult.disabled,
.searchResult.disabled *,
.searchResult.disabled img,
.searchResult.disabled *.disabled{
    background-color: buttonBG;
}

.searchResult .buttonSimple.pressed {
    background-color: whiteBG;
}

.searchResult .commonInput {
    border: none;
    padding: 0px;
    width: 100%;
}

.tabs{
    width: 100%;
    overflow: hidden;
    white-space: nowrap;
    display: inline-block;
    position: relative;

    left: 0px;

    -webkit-transition: left 0.2s, right 0.2s;
    transition: left 0.2s, right 0.2s;
    -ms-transition: left 0.2s, right 0.2s;

}
.tabsContainer{
    position: absolute;
    left: 4px;
    right: 6px;
}
@eval tabScrollButtonWidth kz.arta.synergy.components.style.client.Constants.tabScrollButtonWidth();
.tabsContainer > .buttonSimple {
    position: absolute;
    top: 0px;
    z-index: 9;

    -moz-box-sizing: border-box;
    box-sizing: border-box;

    min-width: tabScrollButtonWidth;
    top: 1px;
    height: 31px;

    border-radius: 0px;
}
.tabsContainer > .buttonSimple:first-child {
    border-top-left-radius: 4px;
}
*[dir="rtl"] .tabsContainer > .buttonSimple:first-child {
    border-top-left-radius: 0px;
    border-top-right-radius: 4px;
}
.tabsContainer > .buttonSimple:last-child {
    border-top-right-radius: 4px;
}
*[dir="rtl"] .tabsContainer > .buttonSimple:last-child {
    border-top-right-radius: 0px;
    border-top-left-radius: 4px;
}

@eval tabMaxWidth kz.arta.synergy.components.style.client.Constants.tabMaxWidth();
@eval tabHeight kz.arta.synergy.components.style.client.Constants.tabHeight();
.tab{
    display: inline-block;
    position: relative;
    z-index: 5;
    vertical-align: top;


    border: 1px solid buttonBorder;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;

    background-color: tabBg2;
    color: border1;

    box-sizing: border-box;
    -moz-box-sizing: border-box;
    max-width: tabMaxWidth;
    height: 31px;
    line-height: 30px;

    /*все вкладки кроме выбранной имеют этот отступ*/
    margin-top: 1px;
    cursor: default;

    left: 0px;
    right: 0px;
    -webkit-transition: left 0.5s ease-out, right 0.5s ease-out;
    transition: left 0.5s ease-out, right 0.5s ease-out;
    -ms-transition: left 0.5s ease-out, right 0.5s ease-out;
}
.tab img {
    vertical-align: top;
    margin: 6px dialogCloseButtonRightMargin 0 0;
    cursor: pointer;
}
.tab > div {
    margin: 0 commonInputPadding;
}
.tab + .tab {
    border-left-style: hidden;
}
.tab.selected {
    border-color: buttonPressed;
    background-color: whiteBG;
    color: textColor2;
    margin-top: 0px;

    height: 32px;

    border-bottom-color: whiteBG;
}

.tab .gradient, .header .gradient {
    background: -moz-linear-gradient(left, tabBg2_0 0%, tabBg2 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,tabBg2_0), color-stop(100%,tabBg2));
    background: -webkit-linear-gradient(left, tabBg2_0 0%,tabBg2 100%);
    background: -o-linear-gradient(left, tabBg2_0 0%,tabBg2 100%);
    background: -ms-linear-gradient(left, tabBg2_0 0%,tabBg2 100%);
    background: linear-gradient(to right, tabBg2_0 0%,tabBg2 100%);

    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")tabBg2_0_ie literal("endColorstr=")tabBg2 literal(",GradientType=1 )");
}
*[dir="rtl"] .tab .gradient, *[dir="rtl"] .header .gradient{
    background: -moz-linear-gradient(left, tabBg2 0%, tabBg2_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,tabBg2), color-stop(100%,tabBg2_0));
    background: -webkit-linear-gradient(left, tabBg2 0%,tabBg2_0 100%);
    background: -o-linear-gradient(left, tabBg2 0%,tabBg2_0 100%);
    background: -ms-linear-gradient(left, tabBg2 0%,tabBg2_0 100%);
    background: linear-gradient(to right, tabBg2 0%,tabBg2_0 100%);
}

.tab.selected .gradient {
    background: -moz-linear-gradient(left, whiteBG_0 0%, whiteBG 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,whiteBG_0), color-stop(100%,whiteBG));
    background: -webkit-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: -o-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: -ms-linear-gradient(left, whiteBG_0 0%,whiteBG 100%);
    background: linear-gradient(to right, whiteBG_0 0%,whiteBG 100%);

    filter: literal("progid:DXImageTransform.Microsoft.gradient( startColorstr=")whiteBG_0_ie literal("endColorstr=")whiteBG literal(",GradientType=1 )");
}
*[dir="rtl"] .tab.selected .gradient {
    background: -moz-linear-gradient(left, whiteBG 0%, whiteBG_0 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,whiteBG), color-stop(100%,whiteBG_0));
    background: -webkit-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: -o-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: -ms-linear-gradient(left, whiteBG 0%,whiteBG_0 100%);
    background: linear-gradient(to right, whiteBG 0%,whiteBG_0 100%);
}
.tabContent{
    border: 1px solid buttonBorder;
    background-color: whiteBG;
    border-radius: 4px;

    height: auto;

    position: absolute;
    top: tabHeight;
    /*эти два пикселя для того, чтобы было видно границы*/
    bottom: 0px;
    right: 2px;
    left: 0px;
}

.collapsingTitle{
    height: 38px;
    padding-left: 18px;
    padding-right: 14px;
    line-height: 38px;
}

.collapsingTitle img {
    -webkit-transition: -webkit-transform 0.2s;
    -moz-transition: transform 0.2s;
    transition: transform 0.2s;
}
@if !user.agent ie9 {
    .collapsingPanel.open .collapsingTitle img {
        transform: rotate(90deg);
        -webkit-transform: rotate(90deg);
        -ms-transform: rotate(90deg);
    }
    *[dir="rtl"] .collapsingPanel.open .collapsingTitle img {
        transform: rotate(-90deg);
        -webkit-transform: rotate(-90deg);
        -ms-transform: rotate(-90deg);
    }
}

.collapsingPanel{
    border: 1px buttonBorder solid;
    border-radius: 4px;
    color: textColor2;
}
.collapsingContent {
    overflow: hidden;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
}

/*Преобразования для закрытия*/
.collapsingTitle + div {
    height: 0px;
    opacity: 0;
    -webkit-transition: height 200ms 250ms, opacity 200ms;
    transition: height 200ms 250ms, opacity 200ms;
    -ms-transition: height 200ms 250ms, opacity 200ms;
}
/*Преобразования для открытия*/
.collapsingPanel.open .collapsingTitle + div {
    opacity: 1;
    -webkit-transition: height 200ms, opacity 200ms 250ms;
    transition:  height 200ms, opacity 200ms 250ms;
    -ms-transition:  height 200ms, opacity 200ms 250ms;
}

.stackPanel {
    width: 292px;
    box-sizing: border-box;
    -moz-box-sizing: border-box;

    background-color: navigatorBG;
    border: 1px solid navigatorBG;
    border-left-style: none;
}
.stackPanel.white {
    background-color: panelBG;
    border-color: buttonBG;
    border-left-style: none;
}


.stack {
    width: 291px;
    position: relative;
}
.stack + .stack {
    border-top: 1px solid navigatorBG;
}
.stackPanel.white .stack {
    border-color: buttonBG;
}

@eval stackHeight kz.arta.synergy.components.style.client.Constants.stackHeight();
.stack .title {
    cursor: pointer;
    height: stackHeight;
    line-height: stackHeight;
    display: block;
    padding-left: 18px;

    color: buttonPressed;
    background-color: mainBG;
}
.stackPanel.white .stack .title {
    color: stackPanelText2;
    background-color: whiteBG;
}

.stackPanel .stack .indicator{
    height: stackHeight;
    width: 13px;
    position: absolute;
    right: -1px;
    top: 0;
    background-color: #C23A3A;
    display: none;
}

.stackPanel.white .stack .indicator {
    background-color: #03A2E4;
    right: 0;
}
.stackPanel .stack.open {
    border-bottom-style: none;
}
.stack.open .title {
    border-bottom: 1px solid navigatorBG;
    color: whiteBG;
}
.stackPanel.white .stack.open .title{
    color: textColor2;
    background-color: stackPanelBG;
    border-bottom-color: buttonPressed;
}
.stack.open .indicator {
    display: block;
}
.stack.disabled .title {
    color: stackPanelText2;
    cursor: default;
}
.stackPanel.white .stack.disabled .title {
    color: buttonPressed;
}

.stack .stackContent {
    background-color: navigatorBG;
    overflow: hidden;
    position: relative;
}
.stackPanel.white .stack .stackContent {
    background-color: panelBG;
}

@if !user.agent ie9 {
    .stackPanel .indicator + div {
        -webkit-transition: height 250ms ease-out;
        transition: height 250ms ease-out;
        -ms-transition: height 250ms ease-out;
    }
}

.stackPanel .indicator + div {
    height: 0px;
}


.checkbox input[type=checkbox] {
    display: none;
}
@sprite .checkbox label{
    gwt-image: "checkboxOff";
    width: 16px;
    height: 16px;
    cursor: pointer;

    display: inline-block;
    vertical-align: middle;
}
@sprite .checkbox input[type=checkbox]:checked + label {
    gwt-image: "checkboxOn";
}
@sprite .checkbox.disabled input[type=checkbox] + label {
    gwt-image: "checkboxOffDisabled";
    cursor: default;
}
@sprite .checkbox.disabled input[type=checkbox]:checked + label {
    gwt-image: "checkboxOnDisabled";
    cursor: default;
}
@sprite .checkbox.group input[type=checkbox]:checked + label {
    gwt-image: "checkboxGroup"
}
@sprite .checkbox.group.disabled input[type=checkbox]:checked + label {
    gwt-image: "checkboxGroupDisabled";
    cursor: default;
}

.radio input[type=radio] {
    display: none;
}
@sprite .radio label {
    gwt-image: "radioOff";
    width: 16px;
    height: 16px;
    cursor: pointer;

    display:inline-block;
    vertical-align: middle;
}
@sprite .radio input[type=radio]:checked + label {
    gwt-image: "radioOn";
}
@sprite .radio.disabled label {
    gwt-image: "radioDisabled";
    cursor: default;
}
@sprite .radio.disabled input[type=radio]:checked + label {
    gwt-image: "radioOnDisabled";
}

:focus {
    outline: none;
}

.tableWhole {
    border: 1px solid buttonPressed;
    border-radius: 4px;
    overflow: hidden;
    position: relative;
}

.hat {
    height: 39px;
    line-height: 39px;
    border-bottom: 1px solid buttonPressed;
}
.tableWhole .hat > span {
    color: textColor2;
    margin-left: 16px;
}
.tableWhole .hat > .buttonSimple {
    float: right;
    margin-right: 4px;
    margin-top: 4px;
}
.tableWhole .hat > .pager {
    float: right;
    margin-top: 4px;
    margin-right: 4px;
}

.table {
    border-collapse: separate;
    border-spacing: 0;
    table-layout: fixed;
    width: 100%;
}
.table.notFull {
    border-bottom: 1px solid buttonBG;
}

.table td {
    border: 1px dotted buttonBG;

    -webkit-background-clip: content-box;
    -moz-background-clip: content-box;
    background-clip: content-box;

    box-sizing: border-box;
    -moz-box-sizing: border-box;

    padding: 0px;
    text-align: left;
    color: textColor1;
    border-bottom-style: none;
    border-left-style: none;
    overflow: hidden;
    white-space: nowrap;

    background-clip: padding-box;

    /*Шрифт должен наследоваться откуда-нибудь сверху, но standard.css переписывает шрифт
    * для всех td. Потом надо поменять.
    */
    font-family: DroidSans;
    font-size:14px;
}

.table.multipleLines td {
    white-space: normal;
    word-break: break-all;
}

.table td > div {
    line-height: 26px;
}

.table tr:nth-child\(even\) {
    background-color: tableString2;
}

.table tr:first-child td {
    border-top-style: none;
}
.table tr:last-child td {
    border-bottom-style: none;
}
.table tr td:last-child {
    border-right-style: none;
}
.table tr td:first-child {
    border-left-style: none;
}
/*последний ряд, не обязательно последний td*/
.table tr.last td {
    border-bottom-style: dotted;
}
.table tr:last-child td:first-child {
    border-bottom-left-radius: 4px;
}
.table tr:last-child td:last-child {
    border-bottom-right-radius: 4px;
}

.table td input {
    height: 26px;
    outline: none;
    border: 0;
    display: inline-block;
    width: 100%;
    color: textColor1;
    padding: 0;
}

.table td:hover {
    background-color: selectColor;
}
.table.onlyRows tr:hover {
    background-color: selectColor;
}
.table.onlyRows td:hover {
    background-color: inherit;
}

.table td.selected, .table tr.selected {
    background-color: beige;
}
.table tr td.edit {
    border-style: solid;
    border-bottom-style: none;
    border-color: border1;
    background-color: whiteBG;
    height: 25px;
}
.table tr.last td.edit {
    border-bottom-style: solid;
}
.table tr.edit:first-child td {
    height: 25px;
}
.table tr.edit:first-child td > * {
    height: 25px;
}
.table tr:last-child td.edit {
    border-bottom-style: solid;
}
.table tr td.underEdit {
    border-top: 1px solid border1;
}

/*Временно*/
@external gwt-Label;
.gwt-Label {
    font-family: DroidSans;
    font-size:14px;
}

@eval tableDividerWidth kz.arta.synergy.components.style.client.Constants.tableDividerWidth();
.tableDivider {
    height: 100%;
    width: tableDividerWidth;
    cursor: col-resize;
    position: absolute;
    top: 0;
}
.tableDivider.drag {
    width: 1px;
    background-color: border1;
}


.headersTable {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    table-layout: fixed;
}
.headersTable td {
    padding: 0;
    box-sizing: border-box;
    -moz-box-sizing: border-box;

    border-right: 1px solid buttonPressed;
    border-bottom:1px solid buttonPressed;
    border-spacing: 0;
    background-color: tabBg2;
    height: 32px;
}
.headersTable td:last-child {
    border-right-style: none;
}
.header{
    color: textColor2;
    padding-left: 12px;
    padding-right: 6px;
    line-height: 32px;
    height: 32px;
    vertical-align: top;
    position: relative;
    background-color: tabBg2;

    /*граница включается, когда хедер перемещается*/
    border: 1px solid buttonPressed;
    border-style: none;
}
.header img {
    position: absolute;
    right: 10px;
    top: 8px;
    margin-left: 5px;
}

.headerDivider {
    background-color: selectColor;
    height: 32px;
    position: fixed;
    visibility: hidden;
}

.tree {
    border: 1px solid buttonPressed;
}

.treeItem {
    cursor: default;
    color: textColor1;
    line-height: 19px;
    white-space: nowrap;
    margin-left: 24px;
}
.treeItem.selected {
    color: textColor2;
}
/*индикатор*/
.treeItem img {
    cursor: pointer;
    margin-right: 10px;
}
/*иконка*/
.treeItem img + img {
    cursor: default;
    margin-right: 8px;
}
.treeItem span {
    white-space: nowrap;
}

.treeItem {
    margin-top: 16px;
}
.tree > .treeItem:first-child {
    margin-top: 24px;
}

@if !user.agent ie9 {
    .treeItem .content {
        -webkit-transition: height 0.3s ease-out;
        transition: height 0.3s ease-out;
        -ms-transition: height 0.3s ease-out;
    }
}
.treeItem .content {
    overflow: hidden;
}

@eval pagerHeight kz.arta.synergy.components.style.client.Constants.pagerHeight();
.pager {
    height: pagerHeight;
    overflow: visible;
    border: 1px solid buttonBorder;
    border-radius: 4px;
    position: relative;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
}

@eval pagerButtonWidth kz.arta.synergy.components.style.client.Constants.pagerButtonWidth();
.pager .buttonSimple {
    width: 32px;
    position: absolute;
    top: -1px;
}
.pager .buttonSimple:hover {
    z-index: 1;
}
.pager .buttonSimple:first-child {
    left: -1px;
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
}
.pager .buttonSimple:last-child {
    right: -1px;
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
}
@eval pagerTextWidth kz.arta.synergy.components.style.client.Constants.pagerTextWidth();
@eval pagerTextPadding kz.arta.synergy.components.style.client.Constants.pagerTextPadding();

.pager span {
    display: inline-block;
    width: pagerTextWidth;
    line-height: 14px;
    padding-left: pagerTextPadding;
    padding-right: pagerTextPadding;
    position: absolute;
    color: textColor2;
    text-align: center;
}

.weekChooser {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    height: 32px;

    border: 1px solid buttonPressed;
    background-color: white;
}

@eval weekdayChooserPadding kz.arta.synergy.components.style.client.Constants.weekdayChooserPadding();
.day {
    display: inline-block;
    height: 30px;
    line-height: 30px;
    color: stackPanelText2;
    text-align: center;
    cursor: default;
    padding-left: weekdayChooserPadding;
    padding-right: weekdayChooserPadding;
    cursor: pointer;
}
.day.selected {
    background-color: selectColor;
}

.repeatChooser .buttonSimple {
    background-color: buttonBG;
}

.repeatChooser .buttonSimple.pressed {
    background-color: buttonPressed;
}

.comment {
    position: relative;
    padding: 16px;
    border-bottom: 1px solid buttonBorder;
    white-space: pre-wrap;
}
.comment > img {
    position:  absolute;
    top: 16px;
    right: 16px;
    cursor: pointer;
    opacity: 0.5;
}
.comment > img:hover {
    opacity: 1;
}
.comment.accept > img, .comment.decline > img {
    cursor: default;
}

.comment .name, .comment .date {
    color: border1;
    display: inline-block;
}
.comment.accept .name, .comment.accept .date {
    color: approveButtonBG5;
}
.comment.decline .name, .comment.decline .date {
    color: declineButtonBG4;
}

.comment .content {
    color: textColor1;
    margin-top: 16px;
    height: auto;
}

@eval commentInputCommentLineHeight kz.arta.synergy.components.style.client.Constants.commentInputCommentLineHeight();

.commentInput {
    position: relative;
    font-size: 0;
    width: 100%;
}
.commentInput > textarea {
    height: commentInputCommentLineHeight;
    line-height: commentInputCommentLineHeight;

    box-sizing: border-box;
    -moz-box-sizing: border-box;

    resize: none;
    border: 0;
    margin: 0;
    padding: commonInputPadding;
    padding-right: 32px;

    color: textColor2;

    width: 100%;

    overflow: hidden;
}

.commentInputAccept {
    padding: 8px;
    position: absolute;
    bottom: 0;
    right: 0;
    opacity: 0.5;
}

.commentInputAccept:hover {
    opacity: 1;
    cursor: pointer;
}

.commentsPanel {
    position: relative;
    border: 1px solid buttonBorder;
}
.commentsPanel > div:first-child {
    position: absolute;
    top: 0;
}
.commentsPanel > div:last-child {
    bottom: 0;
}