apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'gwt'
apply plugin: 'artifactory-publish'
apply plugin: 'maven-publish'
apply plugin: 'maven'

version='3.0'

repositories {
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        maven {
            url 'https://github.com/steffenschaefer/gwt-gradle-plugin/raw/maven-repo/'
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.4'
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '2.2.4')
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

dependencies {
    compile 'com.google.gwt:gwt-dev:2.6.1'
    compile 'com.google.gwt:gwt-user:2.6.1'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'src'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

jar {
    from 'src/main/java'
}

gwt {
    gwtVersion="2.6.1";
    minHeapSize = "512M";
    maxHeapSize = "1024M";

    modules 'kz.arta.synergy.components.style.ComponentStyle'
}



artifactory {
    contextUrl = 'http://192.168.1.30:8081/artifactory'
    //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        //A closure defining publishing information
        repository {
            repoKey = 'synergy-libs'   //The Artifactory repository key to publish to
            username = 'deployer'          //The publisher user name
            password = 'deployer'       //The publisher password
        }
        defaults {
            publishArtifacts = true
            publications('mavenJava')
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'kz.arta'
            artifactId 'component-style'

            from components.java
//            artifact sourcesJar {
//                classifier "sources"
//            }
        }
    }
}
